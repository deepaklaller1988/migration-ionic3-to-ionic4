{"version":3,"sources":["./src/app/components/notification/notification.page.html","./src/app/components/notification/notification.module.ts","./src/app/components/notification/notification.page.scss","./src/app/components/notification/notification.page.ts","./src/app/services/home.service.ts","./src/app/services/notification.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,81BAA81B,4EAA4E,8DAA8D,mBAAmB,QAAQ,oBAAoB,MAAM,mDAAmD,qCAAqC,kN;;;;;;;;;;;;;;;;;;;;;;;ACA5kC;AACM;AACF;AACU;AACb;AACG;AAEU;AAEvD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mEAAgB;KAC5B;CACF,CAAC;AAYF;IAAA;IAAqC,CAAC;IAAzB,sBAAsB;QAVlC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,uDAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,mEAAgB,CAAC;SACjC,CAAC;OACW,sBAAsB,CAAG;IAAD,6BAAC;CAAA;AAAH;;;;;;;;;;;;AC1BnC,+DAA+D,uK;;;;;;;;;;;;;;;;;;;;;ACAb;AACwC;AAChB;AAChB;AAEvB;AAOnC;IAEE,0BAAoB,OAAsB,EAChC,mBAAwC,EACxC,WAA8B,EAC9B,WAAwB,EACxB,SAA0B;QAJhB,YAAO,GAAP,OAAO,CAAe;QAChC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,gBAAW,GAAX,WAAW,CAAmB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,cAAS,GAAT,SAAS,CAAiB;QAChC,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAED,mCAAQ,GAAR;IACA,CAAC;IAKK,wCAAa,GAAnB;;;;;;;wBACE,IAAI,CAAC,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;wBAC1B,qBAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gCACzC,OAAO,EAAE,0BAA0B;6BACpC,CAAC;;wBAFE,MAAM,GAAG,SAEX;wBACF,MAAM,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;4BACpB,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,KAAI,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,0DAAG,CAAE,eAAK;gCACrG,OAAO,KAAK,CAAC,GAAG,CAAC,UAAC,IAAS;oCACzB,IAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,CAAC;oCAC3E,OAAO,mDAAK,IAAI,EAAG;gCACrB,CAAC,CAAC,CAAC;4BACL,CAAC,CAAC,CAAC,CAAC;wBACN,CAAC,CAAC,CAAC,IAAI,CAAC;4BACN,MAAM,CAAC,OAAO,EAAE,CAAC;wBACnB,CAAC,CAAC;;;;;KACH;IAEK,0CAAe,GAArB,UAAsB,YAAY;;;;;;4BACnB,qBAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;4BACzC,OAAO,EAAE,gBAAgB;yBAC1B,CAAC;;wBAFE,MAAM,GAAG,SAEX;wBACF,MAAM,CAAC,OAAO,EAAE,CAAC;wBACjB,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,0DAAG,CAAC,UAAC,IAAS;4BAC5F,IAAI,IAAI,EAAE;gCACR,IAAI,IAAI,GAAG,IAAI,CAAC;gCAChB,IAAI,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC;gCACjC,IAAI,CAAC,KAAK,GAAG,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,KAAI,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,CAAC;gCAC5E,IAAI,CAAC,MAAM,GAAG,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,YAAY,EAAE,CAAC;gCACzE,IAAI,CAAC,OAAO,GAAG,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,YAAY,EAAE,CAAC;gCAChE,IAAI,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,YAAY,EAAE,CAAC;gCACvE,IAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,YAAY,EAAE,CAAC;gCAClE,IAAI,IAAI,CAAC,YAAY,EAAE;oCACrB,IAAI,CAAC,aAAa,GAAG,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,YAAY,EAAE,CAAC;iCAClF;gCACD,OAAO,iDAAE,MAAM,YAAK,IAAI,EAAG;6BAC5B;iCAAM;gCACL,KAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,KAAI,CAAC,GAAG,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC;gCACrF,KAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;6BACpC;wBACH,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,UAAC,GAAG;4BAChB,IAAI,GAAG,EAAE;gCACP,KAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,KAAI,CAAC,GAAG,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC;gCAC5E,MAAM,CAAC,OAAO,EAAE,CAAC;gCACjB,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;6BACpD;iCAAM;gCACL,MAAM,CAAC,OAAO,EAAE,CAAC;6BAClB;wBACH,CAAC,CAAC,CAAC;;;;;KACJ;IAEK,wCAAa,GAAnB;;;;;;4BACe,qBAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;4BACzC,OAAO,EAAE,wBAAwB;yBAClC,CAAC;;wBAFE,MAAM,GAAG,SAEX;wBACF,MAAM,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;4BACpB,KAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,KAAI,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,0DAAG,CAAC,eAAK;gCAC/E,OAAO,KAAK,CAAC,GAAG,CAAC,UAAC,IAAS;oCACzB,KAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,EAAE,KAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;gCAChE,CAAC,CAAC,CAAC;4BACL,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;wBAClB,CAAC,CAAC,CAAC,IAAI,CAAC;4BACN,MAAM,CAAC,OAAO,EAAE,CAAC;wBACnB,CAAC,CAAC,CAAC;;;;;KACJ;IAED,uCAAY,GAAZ,UAAa,IAAK,EAAE,MAAO;QACzB,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;YAChC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;YACpC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;SACzD;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;SACvC;IACH,CAAC;IAEK,oCAAS,GAAf,UAAgB,OAAO;;;;;4BACT,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4BACtC,OAAO,EAAE,OAAO;4BAChB,QAAQ,EAAE,IAAI;4BACd,QAAQ,EAAE,QAAQ;yBACnB,CAAC;;wBAJE,KAAK,GAAG,SAIV;wBACF,KAAK,CAAC,OAAO,EAAE,CAAC;;;;;KACjB;;gBAhG4B,4DAAa;gBACX,kFAAmB;gBAC3B,gEAAiB;gBACjB,kEAAW;gBACb,8DAAe;;IANzB,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,uKAAuC;;SAExC,CAAC;+EAG6B,4DAAa;YACX,kFAAmB;YAC3B,gEAAiB;YACjB,kEAAW;YACb,8DAAe;OANzB,gBAAgB,CAoG5B;IAAD,uBAAC;CAAA;AApG4B;;;;;;;;;;;;;;;;;;;;;;ACZc;AACO;AACoC;AACP;AAI/E;IAOE,qBAAoB,SAA2B,EACnC,eAAwC,EACxC,IAAgB;QAFR,cAAS,GAAT,SAAS,CAAkB;QACnC,oBAAe,GAAf,eAAe,CAAyB;QACxC,SAAI,GAAJ,IAAI,CAAY;QARpB,UAAK,GAAW,sCAAsC,CAAC;QAIvD,YAAO,GAAW,oFAAoF,CAAC;QAK3G,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAC3C,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAC3C,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IAC/C,CAAC;IAED,iCAAW,GAAX,UAAY,GAAG;QACX,OAAO,CAAC,GAAG,CAAC,WAAW,EAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAC7C,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IAED,8BAAQ,GAAR,UAAS,GAAG;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC;IAC7C,CAAC;IAED,kCAAY,GAAZ,UAAa,MAAM,EAAE,GAAG;QACpB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,SAAS,EAAE,aAAG,IAAI,UAAG,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,EAAE,GAAG,CAAC,EAA/B,CAA+B,CAAC,CAAC;IAChG,CAAC;IAED,8BAAQ,GAAR,UAAS,MAAM;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IACxD,CAAC;IAED,iCAAW,GAAX,UAAY,MAAM;QACd,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IAC5D,CAAC;IAED,+BAAS,GAAT,UAAU,MAAM;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;IACzD,CAAC;IAED,gCAAU,GAAV,UAAW,MAAM,EAAE,MAAM;QACrB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;IAC7E,CAAC;IAED,8BAAQ,GAAR,UAAS,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI;QAA9C,iBAyBC;QAxBG,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC;YAC9D,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;YACrB,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,IAAI;SAChB,CAAC,CAAC,IAAI,CAAC,aAAG;YACP,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC,EAAE;gBACf,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC;oBACzE,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;oBACrB,KAAK,EAAE,OAAO;oBACd,GAAG,EAAE,IAAI;oBACT,MAAM,EAAE,MAAM;oBACd,IAAI,EAAE,KAAK;iBACd,CAAC,CAAC,IAAI,CAAC;oBACJ,IAAI,QAAQ,IAAI,MAAM,EAAE;wBACpB,IAAI,OAAO,GAAG;4BACV,MAAM,EAAE,KAAI,CAAC,KAAK;4BAClB,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,GAAG,kBAAkB,EAAE;4BACjD,kBAAkB,EAAE,CAAC,QAAQ,CAAC;yBACjC;wBACD,KAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,aAAG,IAAM,CAAC,CAAC,CAAC;qBACxE;gBACL,CAAC,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAe,GAAf,UAAgB,GAAG;QACf,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,OAAO,EAAE,aAAG,IAAI,UAAG,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,EAAzB,CAAyB,CAAC,CAAC;IAChF,CAAC;IAED,2CAAqB,GAArB,UAAsB,MAAM,EAAE,GAAG;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,UAAU,EAAE,aAAG,IAAI,UAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,CAAC,EAAvD,CAAuD,CAAC,CAAC;IACzH,CAAC;IAED,0CAAoB,GAApB,UAAqB,GAAG;QACpB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;IAC3D,CAAC;;gBA1E8B,uEAAgB;gBAClB,0FAAuB;gBAClC,+DAAU;;IATjB,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAQ+B,uEAAgB;YAClB,0FAAuB;YAClC,+DAAU;OATjB,WAAW,CAkFvB;IAAD,kBAAC;CAAA;AAlFuB;;;;;;;;;;;;;;;;;;;;ACPmB;AAC2C;AAItF;IAII,6BAAY,SAA2B;QACnC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAC3C,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IAC/C,CAAC;IAED,8CAAgB,GAAhB,UAAiB,GAAG;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,eAAe,EAAE,aAAG,IAAI,UAAG,CAAC,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC,EAAhC,CAAgC,CAAC,CAAC;IACpG,CAAC;IAED,sCAAQ,GAAR,UAAS,GAAG;QACR,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IAED,2CAAa,GAAb,UAAc,MAAM;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAED,wCAAU,GAAV,UAAW,MAAM,EAAE,IAAI,EAAE,IAAI;QACzB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC;IAC9F,CAAC;IAED,2CAAa,GAAb,UAAc,IAAI,EAAE,GAAG;QACnB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;IACtG,CAAC;;gBAvBsB,uEAAgB;;IAJ9B,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAKyB,uEAAgB;OAJ9B,mBAAmB,CA4B/B;IAAD,0BAAC;CAAA;AA5B+B","file":"notification-notification-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n      <ion-title class=\\\"ion-text-center\\\" >Notifications</ion-title>\\n      <ion-buttons slot=\\\"end\\\">\\n          <ion-button (click)=\\\"markAllAsRead()\\\">\\n            <ion-icon slot=\\\"icon-only\\\" name=\\\"close\\\"></ion-icon>\\n          </ion-button>\\n      </ion-buttons>\\n    </ion-toolbar>\\n  </ion-header>\\n  <ion-content class=\\\"notifications-content\\\">\\n    <div *ngIf=\\\"notifications | async as notifications\\\">\\n      <ion-item *ngIf=\\\"notifications?.length==0\\\">\\n        <p>No unread notifications.!</p>\\n      </ion-item>\\n    </div>\\n    <span *ngFor=\\\"let notification of notifications | async\\\">\\n      <ion-item *ngIf=\\\"notification?.userInfo | async as userInfo\\\" class=\\\"item\\\" (click)=\\\"goToCommentPage(notification)\\\">\\n        <ion-avatar item-left>\\n          <img src=\\\"{{userInfo?.profilePicThumb ? userInfo.profilePicThumb : userInfo.profilePic}}\\\" class=\\\"img-avatar\\\">\\n        </ion-avatar>\\n        <p>{{userInfo.username}}&nbsp;{{notification.event}}&nbsp;your post.</p>\\n        <ion-note class=\\\"time\\\">{{notification.createdAt | amTimeAgo }}</ion-note>\\n      </ion-item>\\n    </span>\\n  </ion-content>\\n  <ion-fab bottom right (click)=\\\"goToPostPage()\\\">\\n    <button ion-fab>\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </button>\\n  </ion-fab>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MomentModule } from 'ngx-moment';\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotificationPage } from './notification.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MomentModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [NotificationPage]\n})\nexport class NotificationPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbm90aWZpY2F0aW9uL25vdGlmaWNhdGlvbi5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {NavController, LoadingController, ToastController, Events } from '@ionic/angular';\nimport { NotificationService } from '../../services/notification.service';\nimport { HomeService } from '../../services/home.service';\nimport { Observable } from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {  } from 'rxjs/add/operator/take';\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.page.html',\n  styleUrls: ['./notification.page.scss'],\n})\nexport class NotificationPage implements OnInit {\n\n  constructor( public navCtrl: NavController,\n    private notificationService: NotificationService,\n    private loadingCtrl: LoadingController,\n    private homeService: HomeService,\n    private toastCtrl: ToastController) {\n      this.constructorfn();\n  }\n\n  ngOnInit() {\n  }\n\n  private uid: string;\n  public notifications;\n\n  async constructorfn() {\n    this.uid = localStorage.getItem('uid');\n    let loader = await this.loadingCtrl.create({\n      message: 'Getting Notifications...'\n    });\n    loader.present().then(() => {\n      this.notifications = this.notificationService.getNotifications(this.uid).valueChanges().pipe(map( items => {\n        return items.map((item: any) => {\n          item.userInfo = this.notificationService.userInfo(item.uid).valueChanges();\n          return { ...item };\n        });\n      }));\n    }).then(() => {\n      loader.dismiss();\n    })\n  }\n\n  async goToCommentPage(notification) {\n    let loader = await this.loadingCtrl.create({\n      message: 'Please wait...'\n    });\n    loader.present();\n    this.notificationService.getSinglePost(notification.postId).valueChanges().pipe(map((item: any) => {\n      if (item) {\n        let data = item;\n        let postId = notification.postId;\n        data.liked = this.homeService.checkIsLiked(postId, this.uid).valueChanges();\n        data.postOf = this.homeService.getUserInfo(data.postedBy).valueChanges();\n        data.likedBy = this.homeService.getLikes(postId).valueChanges();\n        data.commentedBy = this.homeService.getComments(postId).valueChanges();\n        data.sharedBy = this.homeService.getShares(postId).valueChanges();\n        if (data.isSharedPost) {\n          data.whosePostInfo = this.homeService.getUserInfo(data.whosePost).valueChanges();\n        }\n        return { postId, ...data };\n      } else {\n        this.notificationService.markAsRead(notification.postId, this.uid, notification.uid);\n        this.showToast('Post was removed');\n      }\n    })).subscribe((res) => {\n      if (res) {\n        this.notificationService.markAsRead(res.postId, this.uid, notification.uid);\n        loader.dismiss();\n        this.navCtrl.navigateRoot([\"home\", { post: res }]);\n      } else {\n        loader.dismiss();\n      }\n    });\n  }\n\n  async markAllAsRead() {\n    let loader = await this.loadingCtrl.create({\n      message: 'Marking all as read...'\n    });\n    loader.present().then(() => {\n      this.notificationService.getNotifications(this.uid).valueChanges().pipe(map(items => {\n        return items.map((item: any) => {\n          this.notificationService.markAllAsRead(item, this.uid).then();\n        });\n      })).subscribe();\n    }).then(() => {\n      loader.dismiss();\n    });\n  }\n\n  goToPostPage(post?, postOf?) {\n    if (post) {\n      post.playerId = postOf.playerId;\n      post.profilePic = postOf.profilePic;\n      this.navCtrl.navigateRoot([\"PostPage\", { post: post }]);\n    } else {\n      this.navCtrl.navigateRoot(\"PostPage\");\n    }\n  }\n\n  async showToast(message) {\n    let toast = await this.toastCtrl.create({\n      message: message,\n      duration: 4000,\n      position: 'bottom'\n    });\n    toast.present();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { PushNotificationService } from '../services/pushnotification.servics';\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n  private appId: string = \"e194af8d-50b1-4150-958d-afb0df854256\";\n  private users: AngularFirestoreCollection<{}>;\n  private posts: AngularFirestoreCollection<{}>;\n  private chats: AngularFirestoreCollection<{}>;\n  private baseUrl: string = 'https://us-central1-firestrore-ionic-social-app.cloudfunctions.net/followingPosts/';\n\n  constructor(private afService: AngularFirestore,\n      private pushNotiService: PushNotificationService,\n      private http: HttpClient) {\n      this.users = afService.collection('users');\n      this.posts = afService.collection('posts');\n      this.chats = afService.collection('chats');\n  }\n\n  getUserInfo(uid) {\n      console.log(\">>>>>>>>>\",this.users.doc(uid));\n      return this.users.doc(uid);\n  }\n\n  getPosts(uid) { // this API hit will give loggedin plus followed users post only\n      return this.http.get(this.baseUrl + uid);\n  }\n\n  checkIsLiked(postId, uid) {\n      return this.posts.doc(postId).collection('likedBy', ref => ref.where('likedBy', '==', uid));\n  }\n\n  getLikes(postId) {\n      return this.posts.doc(postId).collection('likedBy');\n  }\n\n  getComments(postId) {\n      return this.posts.doc(postId).collection('commentedBy');\n  }\n\n  getShares(postId) {\n      return this.posts.doc(postId).collection('sharedBy');\n  }\n\n  unlikePost(postId, likeId) {\n      return this.posts.doc(postId).collection('likedBy').doc(likeId).delete();\n  }\n\n  likePost(username, playerId, postId, uid, luid) {\n      return this.posts.doc(postId).collection('likedBy').doc(luid).set({\n          createdAt: Date.now(),\n          type: 'like',\n          likedBy: luid\n      }).then(res => {\n          if ((luid != uid)) {\n              this.users.doc(uid).collection('notifications').doc(postId + '-' + luid).set({\n                  createdAt: Date.now(),\n                  event: 'liked',\n                  uid: luid,\n                  postId: postId,\n                  read: false\n              }).then(() => {\n                  if (playerId != 'noId') {\n                      let message = {\n                          app_id: this.appId,\n                          contents: { \"en\": username + ' liked your post' },\n                          include_player_ids: [playerId]\n                      }\n                      this.pushNotiService.sendNotification(message).subscribe(res => { });\n                  }\n              });\n          }\n      });\n  }\n\n  getMessageCount(uid) {\n      return this.afService.collection('chats', ref => ref.where(uid, '==', uid));\n  }\n\n  getUnreadMessageCount(chatId, uid) {\n      return this.chats.doc(chatId).collection('messages', ref => ref.where('unread', '==', true).where('uid', '==', uid));\n  }\n\n  getNotificationCount(uid) {\n      return this.users.doc(uid).collection('notifications');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n    private users: AngularFirestoreCollection<{}>;\n    private posts: AngularFirestoreCollection<{}>;\n\n    constructor(afService: AngularFirestore) {\n        this.users = afService.collection('users');\n        this.posts = afService.collection('posts');\n    }\n\n    getNotifications(uid) {\n        return this.users.doc(uid).collection('notifications', ref => ref.orderBy('createdAt', 'desc'));\n    }\n\n    userInfo(uid) {\n        return this.users.doc(uid);\n    }\n\n    getSinglePost(postId) {\n        return this.posts.doc(postId);\n    }\n\n    markAsRead(postId, luid, ouid) {\n        return this.users.doc(luid).collection('notifications').doc(postId + '-' + ouid).delete();\n    }\n\n    markAllAsRead(item, uid) {\n        return this.users.doc(uid).collection('notifications').doc(item.postId + '-' + item.uid).delete();\n    }\n}\n"],"sourceRoot":""}