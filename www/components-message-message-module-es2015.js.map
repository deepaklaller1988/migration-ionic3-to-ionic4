{"version":3,"sources":["./src/app/components/message/message.page.html","./src/app/components/message/message.module.ts","./src/app/components/message/message.page.scss","./src/app/components/message/message.page.ts","./src/app/services/message.service.ts"],"names":[],"mappings":"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","file":"components-message-message-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n\\t<ion-toolbar>\\n\\t\\t<ion-title>Messages</ion-title>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"notifications-content\\\">\\n\\t<div *ngIf=\\\"messageList\\\">\\n\\t\\t<ion-item *ngIf=\\\"messageList?.length==0\\\">\\n\\t\\t\\t<p>Conversation not yet started.!</p>\\n\\t\\t</ion-item>\\n\\t</div>\\n\\t<span *ngFor=\\\"let message of messageList\\\">\\n\\t\\t<ion-item *ngIf=\\\"message?.receiverInfo | async as userInfo\\\" class=\\\"item\\\" (click)=\\\"goToChat(message?.chatId, userInfo?.uid, userInfo?.username)\\\">\\n\\t\\t\\t<ion-avatar item-left>\\n\\t\\t\\t\\t<img src=\\\"{{userInfo?.profilePicThumb ? userInfo.profilePicThumb : userInfo.profilePic}}\\\" class=\\\"img-avatar\\\">\\n\\t\\t\\t</ion-avatar>\\n\\t\\t\\t<h2 class=\\\"name\\\">{{userInfo?.username}}</h2>\\n\\t\\t\\t<span *ngIf=\\\"message?.lastMsg | async as lastMsg\\\">\\n\\t\\t\\t\\t<ion-note class=\\\"time\\\" item-right *ngIf=\\\"lastMsg[0]?.createdAt\\\">{{lastMsg[0]?.createdAt | amTimeAgo }}</ion-note>\\n\\t\\t\\t\\t<span *ngIf=\\\"message?.counter | async as counter\\\">\\n\\t\\t\\t\\t\\t<span class=\\\"msg-count\\\" *ngIf=\\\"counter.length>0\\\">{{counter?.length}}</span>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t<p class=\\\"description\\\">{{lastMsg[0]?.text}}</p>\\n\\t\\t\\t</span>\\n\\t\\t</ion-item>\\n\\t</span>\\n</ion-content>\\n\\n<ion-fab bottom right (click)=\\\"goToFollowedByList()\\\">\\n\\t<button ion-fab>\\n\\t\\t<ion-icon name=\\\"chatboxes\\\"></ion-icon>\\n\\t</button>\\n</ion-fab>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MomentModule } from 'ngx-moment';\nimport { IonicModule } from '@ionic/angular';\nimport { MessagePage } from './message.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MessagePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MomentModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [MessagePage]\n})\nexport class MessagePageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWVzc2FnZS9tZXNzYWdlLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { MessageService } from '../../services/message.service';\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.page.html',\n  styleUrls: ['./message.page.scss'],\n})\nexport class MessagePage implements OnInit {\n  private uid: string;\n  public messageList =[];\n\n  constructor(public navCtrl: NavController,\n    private messageService: MessageService) {\n    this.uid = localStorage.getItem('uid');\n    // this.messageList = this.messageService.getChatList(this.uid).snapshotChanges().subscribe(items => {\n    //   return items.map(item => {\n    //     const chatId = item.payload.doc.id;\n    //     let data = item.payload.doc.data();\n    //     let dataCopy = Object.assign({}, data);\n    //     delete dataCopy.chatId;\n    //     delete dataCopy[this.uid];\n    //     delete dataCopy['createdAt'];\n    //     let keys = Object.keys(dataCopy);\n    //     data.receiverId = keys[0];\n    //     data.receiverInfo = this.messageService.userInfo(data.receiverId).valueChanges();\n    //     data.lastMsg = this.messageService.getLastMsg(chatId).valueChanges();\n    //     data.counter = this.messageService.getUnreadMsgs(chatId, data.receiverId).valueChanges();\n    //     return { chatId, ...data };\n    //   });\n    // });\n    this.messageService.getChatList(this.uid).snapshotChanges().subscribe(items => {   \n\n      items.map(item => {\n        const chatId = item.payload.doc.id;\n        let data = item.payload.doc.data();\n        let dataCopy = Object.assign({}, data);\n        delete dataCopy['chatId'];\n        delete dataCopy[this.uid];\n        delete dataCopy['createdAt'];\n        let keys = Object.keys(dataCopy);\n        data['receiverId'] = keys[0];\n        data['receiverInfo'] = this.messageService.userInfo(data['receiverId']).valueChanges();\n        data['lastMsg'] = this.messageService.getLastMsg(chatId).valueChanges();\n        data['counter'] = this.messageService.getUnreadMsgs(chatId, data['receiverId']).valueChanges();\n        this.messageList.push(data);\n      });\n    });\n\n  }\n\n  ngOnInit() {\n  }\n\n  goToChat(chatId, uid, username) {\n    this.navCtrl.navigateRoot([\"chat\",  uid, username, chatId ]);\n  }\n  goToFollowedByList() {\n    this.navCtrl.navigateRoot(\"FollowerListPage\");\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  private chats: AngularFirestoreCollection<{}>;\n  private users: AngularFirestoreCollection<{}>;\n\n  constructor(private afService: AngularFirestore) {\n      this.chats = this.afService.collection('chats');\n      this.users = this.afService.collection('users');\n  }\n\n  getChatList(uid) {\n      return this.afService.collection('chats', ref => ref.where(uid, '==', uid));\n  }\n\n  userInfo(uid) {\n      return this.users.doc(uid);\n  }\n\n  getLastMsg(chatId) {\n      return this.chats.doc(chatId).collection('messages', ref => ref.orderBy('createdAt', 'desc').limit(1));\n  }\n\n  getUnreadMsgs(chatId, receiverId) {\n      return this.chats.doc(chatId).collection('messages', ref => ref.where('unread', '==', true).where('uid', '==', receiverId));\n  }\n}\n"],"sourceRoot":""}