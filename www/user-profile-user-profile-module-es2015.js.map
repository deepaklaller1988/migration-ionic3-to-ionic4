{"version":3,"sources":["./src/app/components/user-profile/user-profile.page.html","./src/app/components/user-profile/user-profile.module.ts","./src/app/components/user-profile/user-profile.page.scss","./src/app/components/user-profile/user-profile.page.ts","./src/app/services/user.service.ts"],"names":[],"mappings":"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","file":"user-profile-user-profile-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n    <ion-toolbar>\\n      <ion-title>Profile</ion-title>\\n      <ion-buttons end>\\n        <button ion-button icon-only (click)=\\\"goToSettings()\\\">\\n          <ion-icon name=\\\"settings\\\"></ion-icon>\\n        </button>\\n      </ion-buttons>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content class=\\\"profile-content\\\">\\n    <div *ngIf=\\\"loggedinUserinfo | async as userInfo\\\">\\n      <div class=\\\"profile-header\\\">\\n        <div class=\\\"bg-overlay\\\"></div>\\n        <div class=\\\"header-wrapper\\\">\\n          <img src=\\\"{{userInfo?.coverPicThumb ? userInfo?.coverPicThumb: userInfo.coverPic? userInfo.coverPic : 'assets/img/profile-bg3.jpg'}}\\\"\\n           class=\\\"profile-bg-img\\\">\\n          <ion-row>\\n            <ion-col col-5>\\n              <div class=\\\"avtar-wrapper\\\">\\n                <img src=\\\"{{userInfo?.profilePicThumb ? userInfo.profilePicThumb: userInfo.profilePic}}\\\" class=\\\"avatar\\\" imageViewer>\\n              </div>\\n            </ion-col>\\n            <!-- name and follow-btn-->\\n            <ion-col col-7>\\n              <h2 class=\\\"name\\\">{{userInfo?.username}}</h2>\\n              <p class=\\\"place ion-text-wrap\\\">\\n                <ion-icon name=\\\"pin\\\" *ngIf=\\\"userInfo?.city\\\"></ion-icon>&nbsp;&nbsp; {{userInfo?.city}}</p>\\n            </ion-col>\\n          </ion-row>\\n          <!-- name and pic -->\\n          <!-- detail -->\\n        </div>\\n  \\n        <ion-row class=\\\"counter-link\\\">\\n          <!-- followers -->\\n          <ion-col class=\\\"ion-text-center\\\" (click)=\\\"goToFollowedByList()\\\">\\n            <p class=\\\"count\\\" *ngIf=\\\"followedBy | async as followedBy\\\">{{followedBy?.length}}</p>\\n            <p class=\\\"count-text\\\">Followers</p>\\n          </ion-col>\\n          <!-- following -->\\n          <ion-col class=\\\"ion-text-center\\\" (click)=\\\"goToFollowingToList()\\\">\\n            <p class=\\\"count\\\" *ngIf=\\\"followingTo | async as followingTo\\\">{{followingTo?.length}}</p>\\n            <p class=\\\"count-text\\\">Following</p>\\n          </ion-col>\\n          <!-- post -->\\n          <ion-col class=\\\"ion-text-center\\\" (click)=\\\"onClickPostsCount()\\\">\\n            <p class=\\\"count\\\">{{posts?.length}}</p>\\n            <p class=\\\"count-text\\\">Post</p>\\n          </ion-col>\\n          <!-- pics-->\\n          <ion-col class=\\\"ion-text-center\\\" (click)=\\\"onClickPhotosCount()\\\">\\n            <p class=\\\"count\\\">{{postImages?.length}}</p>\\n            <p class=\\\"count-text\\\">Photos</p>\\n          </ion-col>\\n        </ion-row>\\n        <!-- detail -->\\n      </div>\\n      <!-- profile header -->\\n  \\n      <!--segment for post and images-->\\n      <ion-segment [(ngModel)]=\\\"profile\\\">\\n        <!-- segment btn for About -->\\n        <ion-segment-button value=\\\"about\\\">\\n          <ion-icon name=\\\"bicycle\\\"></ion-icon>&nbsp;About\\n        </ion-segment-button>\\n        <!-- segment btn for Post -->\\n        <ion-segment-button value=\\\"post\\\">\\n          <ion-icon name=\\\"document\\\"></ion-icon>&nbsp;Post\\n        </ion-segment-button>\\n        <!-- segment btn for photo gallery -->\\n        <ion-segment-button value=\\\"photos-gallery\\\">\\n          <ion-icon name=\\\"images\\\"></ion-icon>&nbsp;Photos\\n        </ion-segment-button>\\n      </ion-segment>\\n      <!-- content -->\\n      <div [ngSwitch]=\\\"profile\\\">\\n        <!-- about-->\\n        <div *ngSwitchCase=\\\"'about'\\\" class=\\\"about\\\">\\n          <ion-row class=\\\"header\\\">\\n            <ion-col col-9>\\n              <h6>Basic Info</h6>\\n            </ion-col>\\n            <ion-col class=\\\"ion-text-right\\\">\\n              <button ion-button icon-only small outline (click)=\\\"goToEditProfile()\\\">\\n                <ion-icon name=\\\"create\\\"></ion-icon>\\n              </button>\\n            </ion-col>\\n          </ion-row>\\n          <div class=\\\"cotent\\\" *ngIf=\\\"detailedUserInfo | async as detailedUserInfo\\\">\\n            <ion-row class=\\\"cotent-item\\\">\\n              <ion-col col-4>\\n                <ion-icon name=\\\"pin\\\"></ion-icon>Lives in </ion-col>\\n              <ion-col class=\\\"details\\\">\\n                <span *ngIf=\\\"detailedUserInfo?.currentAddress?.city\\\">{{detailedUserInfo?.currentAddress?.city + ', '}}{{detailedUserInfo?.currentAddress?.country}}</span>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row class=\\\"cotent-item\\\">\\n              <ion-col col-4>\\n                <ion-icon name=\\\"home\\\"></ion-icon>Hometown </ion-col>\\n              <ion-col class=\\\"details\\\">\\n                <span *ngIf=\\\"detailedUserInfo?.permanentAddress?.city\\\">{{detailedUserInfo?.permanentAddress?.city+ ', '}}{{detailedUserInfo?.permanentAddress?.country}}</span>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row class=\\\"cotent-item\\\">\\n              <ion-col col-4>\\n                <ion-icon name=\\\"mail\\\"></ion-icon>Email:</ion-col>\\n              <ion-col class=\\\"details\\\">\\n                <span>{{detailedUserInfo?.email}}</span>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row class=\\\"cotent-item\\\">\\n              <ion-col col-4>\\n                <ion-icon name=\\\"phone-portrait\\\"></ion-icon>Mobile: </ion-col>\\n              <ion-col class=\\\"details\\\">\\n                <span>{{detailedUserInfo?.mobileNumber}}</span>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row class=\\\"cotent-item\\\">\\n              <ion-col col-4>\\n                <ion-icon name=\\\"call\\\"></ion-icon>Phone: </ion-col>\\n              <ion-col class=\\\"details\\\">\\n                <span>{{detailedUserInfo?.phoneNumber}}</span>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row class=\\\"cotent-item\\\">\\n              <ion-col col-4>\\n                <ion-icon name=\\\"person\\\"></ion-icon>Gender: </ion-col>\\n              <ion-col class=\\\"details\\\">\\n                <span>{{detailedUserInfo?.gender}}</span>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row class=\\\"cotent-item\\\">\\n              <ion-col col-4>\\n                <ion-icon name=\\\"bonfire\\\"></ion-icon>Birth: </ion-col>\\n              <ion-col class=\\\"details\\\">\\n                <span>{{detailedUserInfo?.birthDate | date}}</span>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row class=\\\"cotent-item\\\">\\n              <ion-col col-4>\\n                <ion-icon name=\\\"school\\\"></ion-icon>Education: </ion-col>\\n              <ion-col class=\\\"details\\\">\\n                <span *ngIf=\\\"detailedUserInfo?.education?.qualification\\\">{{detailedUserInfo?.education?.qualification+ ' from '}}{{detailedUserInfo?.education?.University}}</span>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row class=\\\"cotent-item\\\">\\n              <ion-col col-4>\\n                <ion-icon name=\\\"card\\\"></ion-icon>About: </ion-col>\\n              <ion-col class=\\\"details\\\">\\n                <span>{{detailedUserInfo?.about}}</span>\\n              </ion-col>\\n            </ion-row>\\n          </div>\\n        </div>\\n  \\n        <!-- Post-->\\n        <ion-list *ngSwitchCase=\\\"'post'\\\">\\n          <div *ngIf=\\\"posts?.length==0\\\">\\n            <ion-item>\\n              <p>No post updated yet.!</p>\\n            </ion-item>\\n          </div>\\n          <ion-card class=\\\"post\\\" *ngFor=\\\"let post of posts\\\">\\n            <ion-card-content no-padding>\\n              <ion-row>\\n                <ion-col col-12>\\n                  <ion-row>\\n                    <ion-col col-11>\\n                      <p>{{post?.createdAt | amTimeAgo}}</p>\\n                    </ion-col>\\n                    <ion-col col-1>\\n                      <ion-icon class=\\\"delete\\\" name=\\\"close\\\" (click)=\\\"onClickRemovePost(post?.postId, post?.postPicThumb, post?.postPic)\\\">\\n                      </ion-icon>\\n                    </ion-col>\\n  \\n                  </ion-row>\\n                  <ion-row>\\n                    <img *ngIf=\\\"post?.isImgPost\\\" src=\\\"{{post?.postPicThumb? post.postPicThumb: post.postPic}}\\\" class=\\\"post-image\\\" imageViewer>\\n                  </ion-row>\\n                </ion-col>\\n                <ion-col col-12>\\n                  <h2 class=\\\"description\\\">{{post?.oldPostText? post?.oldPostText : post?.postText}}</h2>\\n  \\n                  <!--counts-->\\n                  <ion-row class=\\\"footer-row\\\">\\n                    <div *ngIf=\\\"post?.likedBy | async as likedBy\\\" (click)=\\\"goToUserList(likedBy)\\\">\\n                      <ion-icon name=\\\"heart\\\"></ion-icon>\\n                      <span class=\\\"count\\\">{{likedBy?.length}}</span>\\n                    </div>\\n                    <div *ngIf=\\\"post?.commentedBy | async as commentedBy\\\" (click)=\\\"goToUserList(commentedBy)\\\">\\n                      <ion-icon name=\\\"chatbubbles\\\"></ion-icon>\\n                      <span class=\\\"count\\\">{{commentedBy?.length}}</span>\\n                    </div>\\n                    <div *ngIf=\\\"post?.sharedBy | async as sharedBy\\\" (click)=\\\"goToUserList(sharedBy)\\\">\\n                      <ion-icon name=\\\"share-alt\\\"></ion-icon>\\n                      <span class=\\\"count\\\">{{sharedBy?.length}}</span>\\n                    </div>\\n                  </ion-row>\\n                  <!--counts end-->\\n                </ion-col>\\n              </ion-row>\\n            </ion-card-content>\\n          </ion-card>\\n        </ion-list>\\n  \\n        <!-- pics -->\\n        <div *ngSwitchCase=\\\"'photos-gallery'\\\">\\n          <div *ngIf=\\\"postImages?.length==0\\\">\\n            <ion-item>\\n              <p>No images posted yet.!</p>\\n            </ion-item>\\n          </div>\\n          <div class=\\\"gallary-grid\\\">\\n            <div class=\\\"img-wrap\\\" *ngFor=\\\"let img of postImages\\\">\\n              <img src=\\\"{{img}}\\\" imageViewer>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <!--content -->\\n  </ion-content>\\n  \\n  <ion-fab bottom right (click)=\\\"goToPostPage()\\\">\\n    <button ion-fab>\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </button>\\n  </ion-fab>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MomentModule } from 'ngx-moment';\nimport { IonicModule } from '@ionic/angular';\nimport { UserProfilePage } from './user-profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserProfilePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MomentModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [UserProfilePage]\n})\nexport class UserProfilePageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci1wcm9maWxlL3VzZXItcHJvZmlsZS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {NavController, ToastController, AlertController} from '@ionic/angular';\nimport { HomeService } from '../../services/home.service';\nimport { UserService } from '../../services/user.service';\nimport * as firebase from 'firebase';\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.page.html',\n  styleUrls: ['./user-profile.page.scss'],\n})\nexport class UserProfilePage implements OnInit {\n  \n  public profile: string = 'about'; //segment selector\n  public loggedinUserinfo;\n  public flag: number;  // flag 1 for cover & 0 for profile\n  public posts: Array<{}>;\n  public postImages: string[];\n  private uid: string;\n  public followedBy;\n  public followingTo;\n  public detailedUserInfo;\n\n  constructor(private navCtrl: NavController,\n    public userService: UserService,\n    private toastCtrl: ToastController,\n    private homeService: HomeService,\n    private alertCtrl: AlertController) {\n    this.uid = localStorage.getItem('uid');\n    this.loggedinUserinfo = this.homeService.getUserInfo(this.uid).valueChanges(); // user's details\n    this.followedBy = this.userService.getFollowers(this.uid).valueChanges();\n    this.followingTo = this.userService.getFollowings(this.uid).valueChanges();\n    this.detailedUserInfo = this.userService.getUserDetailedInfo(this.uid).valueChanges();\n    this.userService.loggedinUserPosts(this.uid).snapshotChanges()  // user's posts\n      .subscribe(res => {\n        this.posts = [];\n        this.postImages = [];\n        res.forEach((item: any) => {\n          const postId = item.payload.doc.id;\n          let data = item.payload.doc.data();\n          data.postId = postId;\n          data.likedBy = this.homeService.getLikes(postId).valueChanges();\n          data.commentedBy = this.homeService.getComments(postId).valueChanges();\n          data.sharedBy = this.homeService.getShares(postId).valueChanges();\n          this.posts.push(data);\n          if (data.isImgPost) {\n            this.postImages.push(data.postPic);\n          }\n        });\n      }, error => {\n        this.showToast(error.message);\n      });\n  }\n  ngOnInit() {\n  }\n\n  async showToast(message) {\n    let toast = await this.toastCtrl.create({\n      message: message,\n      duration: 4000,\n      position: 'bottom'\n    });\n    toast.present();\n  }\n\n  onClickPostsCount() {\n    this.profile = 'post';\n  }\n\n  onClickPhotosCount() {\n    this.profile = 'photos-gallery';\n  }\n\n  async onClickRemovePost(id, img, thumb) {\n    let alert = await this.alertCtrl.create({\n      message: 'Delete post?',\n      // message: 'Do you want to remove this post?',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          handler: () => {\n            //do nothing\n          }\n        },\n        {\n          text: 'Delete',\n          handler: () => {\n            this.userService.deletePost(id).then(() => {\n              if (img) {\n                this.removeImageFromStorage(img);\n              }\n              if (thumb) {\n                this.removeImageFromStorage(thumb);\n              }\n              this.showToast('Post has been removed');\n            });\n          }\n        }\n      ]\n    });\n    alert.present();\n  }\n\n  removeImageFromStorage(url) {\n    firebase.storage().refFromURL(url).delete().then(res => {\n    }).catch(error => this.showToast(error.message));\n  }\n\n  goToEditProfile() {\n    this.navCtrl.navigateRoot(\"EditProfilePage\");\n  }\n  goToFollowingToList() {\n    this.navCtrl.navigateRoot(\"FollowingListPage\");\n  }\n  goToFollowedByList() {\n    this.navCtrl.navigateRoot(\"FollowerListPage\");\n  }\n  goToSettings() {\n    this.navCtrl.navigateRoot(\"SettingsPage\");\n  }\n  goToUserList(users) {\n    this.navCtrl.navigateRoot([\"UserListPage\", { users: users }]);\n  }\n\n  goToPostPage(post?, postOf?) {\n    if (post) {\n      post.playerId = postOf.playerId;\n      post.profilePic = postOf.profilePic;\n      this.navCtrl.navigateRoot([\"PostPage\", { post: post }]);\n    } else {\n      this.navCtrl.navigateRoot(\"PostPage\");\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private users: AngularFirestoreCollection<{}>;\n\n  constructor(private afService: AngularFirestore) {\n    this.users = afService.collection('users');\n  }\n\n  loggedinUserPosts(uid) {\n    return this.afService.collection('posts', ref => ref.where('postedBy', '==', uid).orderBy('createdAt', 'desc'));\n  }\n\n  getUserDetailedInfo(uid) {\n    return this.users.doc(uid).collection('profile').doc('detailedInfo');\n  }\n\n  getFollowers(uid) {\n    return this.users.doc(uid).collection('followedBy');\n  }\n\n  getFollowings(uid) {\n    return this.users.doc(uid).collection('followingTo');\n  }\n\n  changeProfilePic(url, flag, uid, thumbUrl) {\n    if (flag == 1) {\n      return this.users.doc(uid).update({ coverPic: url, coverPicThumb: thumbUrl });\n    } else {\n      return this.users.doc(uid).update({ profilePic: url, profilePicThumb: thumbUrl });\n    }\n  }\n\n  deletePost(id) {\n    return this.afService.collection('posts').doc(id).delete();\n  }\n}\n"],"sourceRoot":""}