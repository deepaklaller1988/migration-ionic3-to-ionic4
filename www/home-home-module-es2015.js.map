{"version":3,"sources":["./src/app/components/home/home.page.html","./src/app/components/home/home.module.ts","./src/app/components/home/home.page.scss","./src/app/components/home/home.page.ts","./src/app/services/home.service.ts"],"names":[],"mappings":"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","file":"home-home-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n    <ion-toolbar hideBackButton color=\\\"primary\\\">\\n        <ion-buttons slot=\\\"start\\\" menuToggle>\\n            <ion-menu-button autoHide=\\\"false\\\"></ion-menu-button>\\n          </ion-buttons>\\n        <ion-title class=\\\"ion-text-center\\\">Timeline</ion-title>\\n       <ion-buttons slot=\\\"end\\\">\\n          <ion-button icon-only (click)=\\\"goToMessage()\\\">\\n            <ion-icon name=\\\"chatboxes\\\"></ion-icon>\\n            <ion-badge item-right>{{msgCount>0?'New':''}}</ion-badge>\\n          </ion-button>\\n        </ion-buttons> \\n    </ion-toolbar>\\n  </ion-header>\\n<ion-content class=\\\"home-content\\\">\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh(uid, $event)\\\">\\n    <ion-refresher-content pullingIcon=\\\"arrow-dropdown\\\" pullingText=\\\"Pull to refresh\\\" refreshingSpinner=\\\"circles\\\" refreshingText=\\\"Refreshing...\\\">\\n    </ion-refresher-content>\\n  </ion-refresher>\\n\\n  <ion-card class=\\\"home-header\\\">\\n    <ion-item>\\n      <ion-avatar item-start>\\n        <img src=\\\"{{loggedinUserInfo?.profilePicThumb ? loggedinUserInfo?.profilePicThumb : loggedinUserInfo?.profilePic}}\\\" (click)=\\\"goToProfile()\\\">\\n      </ion-avatar>\\n      <p (click)=\\\"goToPostPage()\\\">What's in your mind ? {{loggedinUserInfo?.username}}</p>\\n    </ion-item>\\n  </ion-card>\\n  <!-- homer header -->\\n\\n  <!-- home-post -->\\n\\n\\n  <ion-item *ngIf=\\\"isPostsNotAvailable\\\">\\n    <p>No posts are there. Start following user to see their post.</p>\\n  </ion-item>\\n  <ion-card class=\\\"home-post\\\" *ngFor=\\\"let post of followedUsersPost | async\\\">\\n    <div *ngIf=\\\"post.postOf | async as postOf\\\">\\n      <ion-item>\\n        <ion-avatar item-start>\\n          <img (click)=\\\"userDetails(post?.postedBy)\\\" src=\\\"{{postOf?.profilePicThumb ? postOf?.profilePicThumb : postOf?.profilePic}}\\\">\\n        </ion-avatar>\\n        <h2 class=\\\"user-name\\\">\\n          <span (click)=\\\"userDetails(post?.postedBy)\\\">{{postOf.username}} </span>\\n          <span class=\\\"shared\\\" *ngIf=\\\"post?.isSharedPost\\\">&nbsp; shared &nbsp;\\n            <span class=\\\"shared-name\\\" *ngIf=\\\"post?.whosePostInfo | async as whosePostInfo\\\" (click)=\\\"userDetails(post?.whosePost)\\\">{{whosePostInfo.username}}'s </span> post. </span>\\n        </h2>\\n        <p class=\\\"publish-date\\\">{{post?.createdAt | amTimeAgo }}</p> \\n      </ion-item>\\n      <img *ngIf=\\\"post?.isImgPost\\\" src=\\\"{{post?.postPicThumb ? post.postPicThumb : post.postPic}}\\\" (click)=\\\"goToCommentPage(post)\\\"\\n        class=\\\"big-image\\\">\\n      <p class=\\\"description\\\" (click)=\\\"goToCommentPage(post)\\\">{{post?.postText}}</p>\\n      <hr *ngIf=\\\"post?.isSharedPost\\\">\\n      <p class=\\\"description\\\" *ngIf=\\\"post?.isSharedPost\\\" (click)=\\\"goToCommentPage(post)\\\">{{post?.oldPostText}}</p>\\n\\n      <ion-row class=\\\"counter-row\\\">\\n        <ion-col *ngIf=\\\"post?.likedBy | async as likedBy\\\" (click)=\\\"goToUserList(likedBy)\\\">\\n          <button ion-button icon-left clear small class=\\\"footer-btn\\\">\\n            {{likedBy.length}} &nbsp;&nbsp;\\n            <ion-icon class=\\\"heart-2\\\" name=\\\"thumbs-up\\\"></ion-icon>\\n          </button>\\n        </ion-col>\\n\\n        <ion-col *ngIf=\\\"post?.commentedBy | async as commentedBy\\\" (click)=\\\"goToUserList(commentedBy)\\\">\\n          <button ion-button icon-left clear small class=\\\"footer-btn\\\">\\n            {{commentedBy.length}} &nbsp;&nbsp;\\n            <ion-icon name=\\\"chatbubbles\\\"></ion-icon>\\n          </button>\\n        </ion-col>\\n\\n        <ion-col *ngIf=\\\"post?.sharedBy | async as sharedBy\\\" (click)=\\\"goToUserList(sharedBy)\\\">\\n          <button ion-button icon-left clear small class=\\\"footer-btn\\\">\\n            {{sharedBy.length}} &nbsp;&nbsp;\\n            <ion-icon name=\\\"share-alt\\\"></ion-icon>\\n          </button>\\n        </ion-col>\\n      </ion-row>\\n      <!-- foooter row with buttons likes comment and share  -->\\n      <ion-row class=\\\"footer-row\\\">\\n        <ion-col class=\\\"ion-no-padding\\\" chatbubbles-center>\\n          <button ion-button icon-left clear small class=\\\"footer-btn\\\" *ngIf=\\\"post?.liked | async as liked\\\" [ngClass]=\\\"{like: liked.length==1}\\\"\\n            (click)=\\\"likePost(post, liked.length==1, postOf.playerId)\\\">\\n            <ion-icon name=\\\"heart\\\"></ion-icon>&nbsp;&nbsp; {{liked.length==1?'Unlike':'Like'}}\\n          </button>\\n        </ion-col>\\n        <!-- photo button -->\\n        <ion-col class=\\\"ion-no-padding\\\" chatbubbles-center>\\n          <button ion-button icon-left clear small class=\\\"footer-btn\\\" (click)=\\\"goToCommentPage(post)\\\">\\n            <ion-icon name=\\\"chatbubbles\\\"></ion-icon>&nbsp;&nbsp; Comment\\n          </button>\\n        </ion-col>\\n        <!-- check-in button -->\\n        <ion-col class=\\\"ion-no-padding\\\" chatbubbles-center>\\n          <button ion-button icon-left clear small class=\\\"footer-btn last\\\" (click)=\\\"goToPostPage(post, postOf)\\\">\\n            <ion-icon name=\\\"share-alt\\\"></ion-icon>&nbsp;&nbsp; Share\\n          </button>\\n        </ion-col>\\n      </ion-row>\\n    </div>\\n    <!-- footer row -->\\n  </ion-card>\\n  <!-- homer post -->\\n\\n</ion-content>\\n<!-- home content  -->\\n\\n<ion-fab bottom right (click)=\\\"goToPostPage()\\\">\\n  <button ion-fab>\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\n  </button>\\n</ion-fab>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { MomentModule } from 'ngx-moment';\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MomentModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {NavController, LoadingController, ToastController, Events } from '@ionic/angular';\nimport { Router,NavigationExtras } from '@angular/router';\nimport { HomeService } from '../../services/home.service';\nimport { Observable } from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {  } from 'rxjs/add/operator/take';\n//import 'rxjs/add/operator/take';\n//@IonicPage()\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.page.html',\n  styleUrls: ['./home.page.scss'],\n})\nexport class HomePage implements OnInit {\n\n\n  public followedUsersPost: Observable<any>;\n  public loggedinUserInfo;\n  public uid: string;\n  public msgCount: number = 0;\n  public isPostsNotAvailable: boolean = false;\n\n  constructor(public navCtrl: NavController,\n    private loadingCtrl: LoadingController,\n    private homeService: HomeService,\n    private toastCtrl: ToastController,\n    private events: Events,\n    private router: Router\n    ) {\n      this.construfun();\n  }\n\n//nnnnnn\n  ngOnInit() {\n  }\n  async construfun() {\n    this.uid = localStorage.getItem('uid');\n    let loader = await this.loadingCtrl.create({\n      message: 'Preparing! Please wait...'\n    });\n    loader.present();\n    this.homeService.getUserInfo(this.uid).valueChanges().subscribe(res => {\n      this.loggedinUserInfo = res;\n      this.getFollowedUsersPost(this.uid);\n      loader.dismiss();\n    }, error => {\n      this.navCtrl.navigateRoot(['LoginPage', { tabsHideOnSubPages: true }]);\n    });\n  }\n  async showToast(message) {\n    let toast = await this.toastCtrl.create({\n      message: message,\n      duration: 4000,\n      position: 'bottom'\n    });\n    toast.present();\n  }\n\n  doRefresh(uid, refresher) {\n    this.getFollowedUsersPost(uid, refresher)\n  }\n\n  ionViewWillEnter() {\n    if (localStorage.getItem('uid') == null) {\n      this.navCtrl.navigateRoot(['LoginPage', { tabsHideOnSubPages: true }]);\n    } else {\n      this.uid = localStorage.getItem('uid');\n      this.getUnreadMessageCount();\n      this.homeService.getNotificationCount(localStorage.getItem('uid')).valueChanges()\n        .subscribe(res => {\n          this.events.publish('notificationCount', res.length);\n        });\n    }\n  }\n\n  getUnreadMessageCount() {\n\n    this.homeService.getMessageCount(this.uid).valueChanges().subscribe(items => {\n      return items.map((item: any) => {\n        this.msgCount = 0;\n        const chatId = item.chatId;\n        delete item.chatId;\n        delete item[this.uid];\n        delete item['createdAt'];\n        const keys = Object.keys(item);\n        const receiverId = keys[0];\n        this.homeService.getUnreadMessageCount(chatId, receiverId).valueChanges().subscribe((res: any) => {\n          if (res.length > 0) {\n            this.msgCount = 1;\n          }\n        });\n      });\n    });\n  }\n  async getFollowedUsersPost(uid, refresher?) {\n    this.followedUsersPost = await this.homeService.getPosts(uid).pipe(map( (items: any) => {\n      if (items.message) {\n        this.isPostsNotAvailable = true;\n      } else {\n        return items.map((item: any) => {\n          const postId = item.postId;\n          let data = item;\n          data.liked = this.homeService.checkIsLiked(postId, this.uid).valueChanges();\n          data.postOf = this.homeService.getUserInfo(data.postedBy).valueChanges();\n          data.likedBy = this.homeService.getLikes(postId).valueChanges();\n          data.commentedBy = this.homeService.getComments(postId).valueChanges();\n          data.sharedBy = this.homeService.getShares(postId).valueChanges();\n          if (data.isSharedPost) {\n            data.whosePostInfo = this.homeService.getUserInfo(data.whosePost).valueChanges();\n          }\n          return { postId, ...data };\n        });\n      }\n    }));\n    if (refresher) {\n      refresher.complete();\n    }\n  }\n\n  likePost(post, liked, playerId) {\n    if (liked) {\n      this.homeService.unlikePost(post.postId, this.uid).then();\n    } else {\n      this.homeService.likePost(this.loggedinUserInfo.username, playerId, post.postId, post.postedBy, this.uid).then();\n    }\n  }\n\n  goToProfile() {\n    this.navCtrl.navigateRoot(\"UserProfilePage\");\n  }\n\n  goToMessage() {\n    this.navCtrl.navigateRoot(\"message\");\n  }\n\n  goToCommentPage(post) {\n    this.navCtrl.navigateRoot([\"CommentsPage\", { post: post }]);\n  }\n\n  goToUserList(users) {\n    this.navCtrl.navigateRoot([\"UserListPage\", { users: users }]);\n  }\n\n  goToPostPage(post?, postOf?) {\n    if (post) {\n      console.log(post);\n      post.playerId = postOf.playerId;\n      post.profilePic = postOf.profilePic;\n      let navigationExtras: NavigationExtras = {\n        queryParams: {\n          post: JSON.stringify(post)\n        }\n      };\n      this.router.navigate(['post'],navigationExtras );\n    } else {\n      this.router.navigate(['post']);\n    }\n  }\n\n  userDetails(uid) {\n    if (uid == this.uid) {\n      this.goToProfile();\n    } else {\n      this.navCtrl.navigateRoot([\"OthersProfilePage\", { uid: uid }]);\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { PushNotificationService } from '../services/pushnotification.servics';\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n  private appId: string = \"e194af8d-50b1-4150-958d-afb0df854256\";\n  private users: AngularFirestoreCollection<{}>;\n  private posts: AngularFirestoreCollection<{}>;\n  private chats: AngularFirestoreCollection<{}>;\n  private baseUrl: string = 'https://us-central1-firestrore-ionic-social-app.cloudfunctions.net/followingPosts/';\n\n  constructor(private afService: AngularFirestore,\n      private pushNotiService: PushNotificationService,\n      private http: HttpClient) {\n      this.users = afService.collection('users');\n      this.posts = afService.collection('posts');\n      this.chats = afService.collection('chats');\n  }\n\n  getUserInfo(uid) {\n      console.log(\">>>>>>>>>\",this.users.doc(uid));\n      return this.users.doc(uid);\n  }\n\n  getPosts(uid) { // this API hit will give loggedin plus followed users post only\n      return this.http.get(this.baseUrl + uid);\n  }\n\n  checkIsLiked(postId, uid) {\n      return this.posts.doc(postId).collection('likedBy', ref => ref.where('likedBy', '==', uid));\n  }\n\n  getLikes(postId) {\n      return this.posts.doc(postId).collection('likedBy');\n  }\n\n  getComments(postId) {\n      return this.posts.doc(postId).collection('commentedBy');\n  }\n\n  getShares(postId) {\n      return this.posts.doc(postId).collection('sharedBy');\n  }\n\n  unlikePost(postId, likeId) {\n      return this.posts.doc(postId).collection('likedBy').doc(likeId).delete();\n  }\n\n  likePost(username, playerId, postId, uid, luid) {\n      return this.posts.doc(postId).collection('likedBy').doc(luid).set({\n          createdAt: Date.now(),\n          type: 'like',\n          likedBy: luid\n      }).then(res => {\n          if ((luid != uid)) {\n              this.users.doc(uid).collection('notifications').doc(postId + '-' + luid).set({\n                  createdAt: Date.now(),\n                  event: 'liked',\n                  uid: luid,\n                  postId: postId,\n                  read: false\n              }).then(() => {\n                  if (playerId != 'noId') {\n                      let message = {\n                          app_id: this.appId,\n                          contents: { \"en\": username + ' liked your post' },\n                          include_player_ids: [playerId]\n                      }\n                      this.pushNotiService.sendNotification(message).subscribe(res => { });\n                  }\n              });\n          }\n      });\n  }\n\n  getMessageCount(uid) {\n      return this.afService.collection('chats', ref => ref.where(uid, '==', uid));\n  }\n\n  getUnreadMessageCount(chatId, uid) {\n      return this.chats.doc(chatId).collection('messages', ref => ref.where('unread', '==', true).where('uid', '==', uid));\n  }\n\n  getNotificationCount(uid) {\n      return this.users.doc(uid).collection('notifications');\n  }\n}\n"],"sourceRoot":""}