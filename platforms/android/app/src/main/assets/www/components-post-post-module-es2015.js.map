{"version":3,"sources":["./src/app/components/post/post.page.html","./src/app/components/post/post.module.ts","./src/app/components/post/post.page.scss","./src/app/components/post/post.page.ts","./src/app/services/post.service.ts"],"names":[],"mappings":"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","file":"components-post-post-module-es2015.js","sourcesContent":["module.exports = \"<!-- <ion-header>\\n  <ion-toolbar>\\n    <ion-title>post</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n</ion-content> -->\\n\\n<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Post</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"post-content\\\">\\n  <ion-card class=\\\"post-header\\\" *ngIf=\\\"loggedinUserInfo | async as userInfo\\\" (click)=\\\"goToProfile()\\\">\\n    <ion-item>\\n      <ion-avatar item-left>\\n        <img src=\\\"{{userInfo?.profilePicThumb? userInfo.profilePicThumb: userInfo.profilePic}}\\\">\\n      </ion-avatar>\\n      <div class=\\\"user-name\\\">{{userInfo?.username}}</div>\\n    </ion-item>\\n  </ion-card>\\n  <!-- homer header -->\\n\\n  <ion-card class=\\\"home-post\\\" *ngIf=\\\"isSharedPost\\\">\\n    <ion-item (click)=\\\"userDetails(post?.postedBy)\\\">\\n      <ion-avatar item-start>\\n        <img src=\\\"{{post?.profilePicThumb? post.profilePicThumb : post.profilePic}}\\\">\\n      </ion-avatar>\\n      <h2 *ngIf=\\\"post?.postOf | async as postOf\\\" class=\\\"user-name\\\">{{postOf?.username}}</h2>\\n      <p class=\\\"publish-date\\\">{{post?.createdAt | amTimeAgo }}</p>\\n    </ion-item>\\n    <img *ngIf=\\\"post?.isImgPost\\\" src=\\\"{{post?.postPicThumb? post.postPicThumb: post.postPic}}\\\" class=\\\"big-image\\\">\\n    <p class=\\\"description\\\">{{post?.postText}}</p>\\n  </ion-card>\\n\\n  <ion-card class=\\\"other-option\\\" (click)=\\\"onClickOption()\\\">\\n    <button ion-item type=\\\"button\\\" *ngIf=\\\"!isSharedPost\\\">\\n      <ion-icon name=\\\"heart\\\" item-left></ion-icon>\\n      Status\\n    </button>\\n    <div class=\\\"upload-item-wrapper\\\" *ngIf=\\\"!isSharedPost\\\">\\n      <button type=\\\"button\\\" ion-item class=\\\"upload-item\\\">\\n        <ion-icon name=\\\"images\\\" item-left></ion-icon>\\n        Photo\\n      </button>\\n      <input type=\\\"file\\\" id=\\\"inputFileId\\\" accept=\\\"image/*\\\" (change)=\\\"selectImage($event)\\\">\\n    </div>\\n    <!-- <button ion-item type=\\\"button\\\" *ngIf=\\\"!isSharedPost\\\">\\n      <ion-icon name=\\\"navigate\\\" item-left></ion-icon>\\n      Checkin\\n    </button> -->\\n    <ion-item class=\\\"input-item\\\" *ngIf=\\\"showTextArea\\\">\\n      <ion-textarea placeholder=\\\"What's on your mind?\\\" [(ngModel)]=\\\"postText\\\">\\n      </ion-textarea>\\n    </ion-item>\\n    <img *ngIf=\\\"localImgUrl\\\" src=\\\"{{localImgUrl}}\\\" width=\\\"300\\\">\\n    <div class=\\\"text-right\\\">\\n      <button type=\\\"button\\\" ion-button class=\\\"btn-post\\\" *ngIf=\\\"!isImgPost\\\" [disabled]=\\\"!postText\\\" (click)=\\\"postStatus()\\\">Post</button>\\n      <button type=\\\"button\\\" ion-button class=\\\"btn-post\\\" *ngIf=\\\"isImgPost\\\" (click)=\\\"postStatus()\\\">Post</button>\\n    </div>\\n  </ion-card>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MomentModule } from 'ngx-moment';\nimport { IonicModule } from '@ionic/angular';\n\nimport { PostPage } from './post.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PostPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MomentModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PostPage]\n})\nexport class PostPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcG9zdC9wb3N0LnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { NavController, NavParams, LoadingController, ToastController } from '@ionic/angular';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { PostService } from '../../services/post.service';\nimport { HomeService } from '../../services/home.service';\nimport * as firebase from 'firebase';\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.page.html',\n  styleUrls: ['./post.page.scss'],\n})\nexport class PostPage implements OnInit {\n\n  private uid: string;\n  public post: any;\n  private playerId: string;\n  public showTextArea: boolean = false;\n  private isSharedPost: boolean = false;\n  public loggedinUserInfo;\n  public localImgUrl: string;\n  private postPic: string;\n  public postText: string;\n  public isImgPost: boolean = false;\n\n\n  //to get post via params if it's shared post\n  constructor(public navCtrl: NavController,\n   // private navParams: NavParams,  // IN ionic 4  not working\n   private router: Router,\n    private route: ActivatedRoute,\n    private postService: PostService,\n    public loadingCtrl: LoadingController,\n    private toastCtrl: ToastController,\n    private homeService: HomeService) {\n    this.uid = localStorage.getItem('uid');\n    this.post = this.route.snapshot.queryParams['post'];\n    console.log('aaaaaaaaaaaaaa',this.post.postOf);\n    if (this.post) {\n      this.post.postOf = this.homeService.getUserInfo(this.post.postedBy).valueChanges();\n      console.log( \"LLLLLLLLLLL\",this.post.postOf);\n      this.playerId = this.post.playerId;\n      this.showTextArea = true;\n      this.isSharedPost = true;\n      if (this.post.isImgPost) {\n        this.isImgPost = true;\n      }\n    } else {\n      this.playerId = 'noId';\n    }\n  }\n  ngOnInit() {\n  }\n\n  //to get user info on ViewWillEnteer\n  ionViewWillEnter() {\n    this.loggedinUserInfo = this.homeService.getUserInfo(this.uid).valueChanges();\n  }\n\n  //to show text area\n  onClickOption() {\n    this.showTextArea = true;\n  }\n\n  // to select between shared or new post\n  postStatus() {\n    if (this.isSharedPost) {\n      this.postSharedStatus();\n    } else {\n      this.postNewStatus();\n    }\n  }\n\n  //to update shared post info on sharedby collection\n  submitPostSharedList() {\n    this.postService.submitPostSharedList(this.post.postId, this.uid).then();\n  }\n\n  //to store post as a shared post\n  async postSharedStatus() {\n    let loader = await this.loadingCtrl.create({\n      message: 'Sharing Status...'\n    });\n    loader.present();\n    if (this.post.isImgPost) {\n      this.postService.storeStatusDetails(this.loggedinUserInfo.username, this.playerId, this.post.postText, this.post.isImgPost, this.isSharedPost, this.post.postPic, this.postText, this.post.postedBy, this.post.postId, this.uid, this.post.postPicThumb)\n        .then(res => {\n          this.submitPostSharedList();\n          this.showToast('Image status has been Shared!');\n          this.navCtrl.pop();\n          loader.dismiss();\n        })\n        .catch(error => {\n          this.showToast(error.message);\n          loader.dismiss();\n        });\n    } else {\n      this.postService.storeStatusDetails(this.loggedinUserInfo.username, this.playerId, this.post.postText, this.post.isImgPost, this.isSharedPost, null, this.postText, this.post.postedBy, this.post.postId, this.uid, this.post.postPicThumb)\n        .then(res => {\n          this.submitPostSharedList();\n          this.showToast('Status has been shared!');\n          this.navCtrl.pop();\n          loader.dismiss();\n        })\n        .catch(error => {\n          this.showToast(error.message);\n          loader.dismiss();\n        });\n    }\n  }\n\n  //to store new post with or without image\n async postNewStatus() {\n    let loader = await this.loadingCtrl.create({\n      message: 'Posting Your Status...'\n    });\n    loader.present();\n    if (this.isImgPost) {\n      let storageRef = firebase.storage().ref();\n      let file = (<HTMLInputElement>document.getElementById('inputFileId')).files[0];\n      let imageName = Date.now().toString() + file.name;\n      storageRef.child('users/' + this.uid + '/posts/' + imageName)\n        .put(file, { contentType: 'image/*' })\n        .then(res => {\n          storageRef.child('users/' + this.uid + '/posts/' + imageName).getDownloadURL()\n            .then(url => {\n              this.postPic = url;\n              setTimeout(() => {\n                storageRef.child('thumb/users/' + this.uid + '/posts/' + 'thumb_' + imageName).getDownloadURL().then((thumbUrl) => {\n                  this.postService.storeStatusDetails(this.loggedinUserInfo.username, this.playerId, this.postText, this.isImgPost, this.isSharedPost, this.postPic, null, null, null, this.uid, thumbUrl)\n                    .then(res => {\n                      this.showToast('Image status has been posted!');\n                      this.navCtrl.pop();\n                      loader.dismiss();\n                    })\n                    .catch(error => {\n                      this.showToast(error.message);\n                      loader.dismiss();\n                    });\n                }).catch(error => {\n                  this.showToast(error.message);\n                })\n              }, 7000);\n            }).catch(error => {\n              this.showToast(error.message);\n              loader.dismiss();\n            });\n        }).catch(error => {\n          this.showToast(error.message);\n          loader.dismiss();\n        });\n    } else {\n      this.postService.storeStatusDetails(this.loggedinUserInfo.username, this.playerId, this.postText, this.isImgPost, this.isSharedPost, null, null, null, null, this.uid, null)\n        .then(res => {\n          this.showToast('Status has been posted!');\n          this.navCtrl.pop();\n          loader.dismiss();\n        })\n        .catch(error => {\n          this.showToast(error.message);\n          loader.dismiss();\n        });\n    }\n  }\n\n  //selected image will be taken as localImgUrl\n  selectImage(event) {\n    if (event.target.files && event.target.files[0]) {\n      var reader = new FileReader();\n      reader.onload = (event: any) => {\n        this.localImgUrl = event.target.result;\n        this.isImgPost = true;\n      }\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  }\n\n  async showToast(message) {\n    let toast = await this.toastCtrl.create({\n      message: message,\n      duration: 4000,\n      position: 'bottom'\n    });\n    toast.present();\n  }\n\n  goToProfile() {\n    this.navCtrl.navigateRoot(\"UserProfilePage\");\n  }\n\n  userDetails(uid) {\n    if (uid == this.uid) {\n      this.goToProfile();\n    } else {\n      this.navCtrl.navigateRoot([\"OthersProfilePage\", { uid: uid }]);\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { PushNotificationService } from './pushnotification.servics';\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n  private users: AngularFirestoreCollection<{}>;\n    private posts: AngularFirestoreCollection<{}>;\n    private appId: string = 'e194af8d-50b1-4150-958d-afb0df854256';\n\n    constructor(private afService: AngularFirestore,\n        private pushNotificationService: PushNotificationService) {\n        this.users = this.afService.collection('users');\n        this.posts = this.afService.collection('posts');\n    }\n\n    submitPostSharedList(postId, uid) {\n        return this.posts.doc(postId).collection('sharedBy').add({\n            createdAt: Date.now(),\n            type: 'share',\n            sharedBy: uid\n        });\n    }\n\n    storeStatusDetails(username, playerId, postText = null, isImgPost, isSharedPost, postPic, oldPostText = null, whosePost, postId, uid, thumbUrl) {\n        return this.posts.add({\n            createdAt: Date.now(),\n            postText: postText,\n            oldPostText: oldPostText,\n            isImgPost: isImgPost,\n            isSharedPost: isSharedPost,\n            postPic: postPic,\n            whosePost: whosePost,\n            postedBy: uid,\n            postPicThumb: thumbUrl\n        }).then(res => {\n            if (isSharedPost) {\n                if (whosePost) {\n                    if ((uid != whosePost)) {\n                        this.users.doc(whosePost).collection('notifications').doc(postId + '-' + uid).set({\n                            createdAt: Date.now(),\n                            event: 'shared',\n                            uid: uid,\n                            postId: postId,\n                            read: false\n                        }).then(() => {\n                            if (playerId != 'noId') {\n                                let message = {\n                                    app_id: this.appId,\n                                    contents: { \"en\": username + ' shared your post' },\n                                    include_player_ids: [playerId]\n                                }\n                                this.pushNotificationService.sendNotification(message).subscribe(res => { });\n                            }\n                        });\n                    }\n                }\n            }\n        });\n    }\n}\n"],"sourceRoot":""}