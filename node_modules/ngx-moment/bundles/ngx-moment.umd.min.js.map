{"version":3,"sources":["ng://ngx-moment/add.pipe.ts","ng://ngx-moment/calendar.pipe.ts","ng://ngx-moment/date-format.pipe.ts","ng://ngx-moment/difference.pipe.ts","ng://ngx-moment/moment-options.ts","ng://ngx-moment/duration.pipe.ts","ng://ngx-moment/from-unix.pipe.ts","ng://ngx-moment/parse.pipe.ts","node_modules/tslib/tslib.es6.js","ng://ngx-moment/from-utc.pipe.ts","ng://ngx-moment/is-after.pipe.ts","ng://ngx-moment/is-before.pipe.ts","ng://ngx-moment/local.pipe.ts","ng://ngx-moment/locale.pipe.ts","ng://ngx-moment/parse-zone.pipe.ts","ng://ngx-moment/subtract.pipe.ts","ng://ngx-moment/time-ago.pipe.ts","ng://ngx-moment/utc.pipe.ts","ng://ngx-moment/moment.module.ts"],"names":["momentConstructor","moment","AddPipe","prototype","transform","value","amount","unit","Error","add","Pipe","args","name","CalendarPipe","cdRef","ngZone","_this","this","initTimer","refs","midnightSub","midnight","subscribe","run","markForCheck","_i","arguments","length","formats","referenceTime","i","len","moment.isMoment","calendar","ngOnDestroy","removeTimer","unsubscribe","EventEmitter","window","timeToUpdate_1","_getMillisecondsUntilUpdate","timer","runOutsideAngular","setTimeout","emit","Date","clearTimeout","now","startOf","valueOf","pure","ChangeDetectorRef","NgZone","DateFormatPipe","format","DifferencePipe","otherValue","precision","date","date2","diff","NGX_MOMENT_OPTIONS","InjectionToken","DurationPipe","momentOptions","allowedUnits","_applyOptions","moment.duration","humanize","relativeTimeThresholdOptions","Object","keys","filter","indexOf","forEach","moment.relativeTimeThreshold","Optional","type","Inject","FromUnixPipe","moment.unix","ParsePipe","__assign","assign","t","s","n","p","hasOwnProperty","call","FromUtcPipe","moment.utc","IsAfterPipe","isAfter","IsBeforePipe","isBefore","LocalTimePipe","local","LocalePipe","locale","ParseZonePipe","moment.parseZone","SubtractPipe","subtract","TimeAgoPipe","m","from","lastOmitSuffix","omitSuffix","formatFn","hasChanged","lastTime","getTime","lastValue","lastLocale","getLocale","bind","createTimer","lastText","currentTimer","momentInstance","timeToUpdate","getSecondsUntilUpdate","howOld","Math","abs","moment.isDate","moment.locale","UtcPipe","utc","ANGULAR_MOMENT_PIPES","MomentModule","forRoot","options","ngModule","providers","provide","useValue","NgModule","declarations","exports"],"mappings":"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","sourcesContent":["/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amAdd' })\r\nexport class AddPipe implements PipeTransform {\r\n    transform(value: any, amount: moment.DurationInputArg1, unit?: moment.DurationInputArg2): any {\r\n        if (typeof amount === 'undefined' || (typeof amount === 'number' && typeof unit === 'undefined')) {\r\n            throw new Error('AddPipe: missing required arguments');\r\n        }\r\n        return momentConstructor(value).add(amount, unit);\r\n    }\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport { Pipe, ChangeDetectorRef, PipeTransform, EventEmitter, OnDestroy, NgZone } from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport { Subscription } from 'rxjs';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amCalendar', pure: false })\r\nexport class CalendarPipe implements PipeTransform, OnDestroy {\r\n\r\n  /**\r\n   * Internal reference counter, so we can clean up when no instances are in use\r\n   */\r\n  private static refs = 0;\r\n\r\n  private static timer: number | null = null;\r\n  private static midnight: EventEmitter<Date> | null = null;\r\n\r\n  private midnightSub: Subscription;\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, private ngZone: NgZone) {\r\n    // using a single static timer for all instances of this pipe for performance reasons\r\n    CalendarPipe.initTimer(ngZone);\r\n\r\n    CalendarPipe.refs++;\r\n\r\n    // values such as Today will need to be replaced with Yesterday after midnight,\r\n    // so make sure we subscribe to an EventEmitter that we set up to emit at midnight\r\n    this.midnightSub = CalendarPipe.midnight.subscribe(() => {\r\n      this.ngZone.run(() => this.cdRef.markForCheck());\r\n    });\r\n  }\r\n\r\n  transform(value: Date | moment.Moment, ...args: any[]): any {\r\n    let formats: any = null;\r\n    let referenceTime: any = null;\r\n\r\n    for (let i = 0, len = args.length; i < len; i++) {\r\n      if (args[i] !== null) {\r\n        if (typeof args[i] === 'object' && !moment.isMoment(args[i])) {\r\n          formats = args[i];\r\n        } else {\r\n          referenceTime = momentConstructor(args[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return momentConstructor(value).calendar(referenceTime, formats);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (CalendarPipe.refs > 0) {\r\n      CalendarPipe.refs--;\r\n    }\r\n\r\n    if (CalendarPipe.refs === 0) {\r\n      CalendarPipe.removeTimer();\r\n    }\r\n\r\n    this.midnightSub.unsubscribe();\r\n  }\r\n\r\n  private static initTimer(ngZone: NgZone) {\r\n    // initialize the timer\r\n    if (!CalendarPipe.midnight) {\r\n      CalendarPipe.midnight = new EventEmitter<Date>();\r\n      if (typeof window !== 'undefined') {\r\n        const timeToUpdate = CalendarPipe._getMillisecondsUntilUpdate();\r\n        CalendarPipe.timer = ngZone.runOutsideAngular(() => {\r\n          return window.setTimeout(() => {\r\n            // emit the current date\r\n            CalendarPipe.midnight.emit(new Date());\r\n\r\n            // refresh the timer\r\n            CalendarPipe.removeTimer();\r\n            CalendarPipe.initTimer(ngZone);\r\n          }, timeToUpdate);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private static removeTimer() {\r\n    if (CalendarPipe.timer) {\r\n      window.clearTimeout(CalendarPipe.timer);\r\n      CalendarPipe.timer = null;\r\n      CalendarPipe.midnight = null;\r\n    }\r\n  }\r\n\r\n  private static _getMillisecondsUntilUpdate() {\r\n    const now = momentConstructor();\r\n    const tomorrow = momentConstructor().startOf('day').add(1, 'days');\r\n    const timeToMidnight = tomorrow.valueOf() - now.valueOf();\r\n    return timeToMidnight + 1000; // 1 second after midnight\r\n  }\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amDateFormat' })\r\nexport class DateFormatPipe implements PipeTransform {\r\n  transform(value: Date | moment.Moment | string | number, ...args: any[]): string {\r\n    if (!value) { return ''; }\r\n    return momentConstructor(value).format(args[0]);\r\n  }\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amDifference' })\r\nexport class DifferencePipe implements PipeTransform {\r\n  transform(value: Date | moment.Moment,\r\n            otherValue: Date | moment.Moment,\r\n            unit?: moment.unitOfTime.Diff,\r\n            precision?: boolean): number {\r\n\r\n    const date = momentConstructor(value);\r\n    const date2 = (otherValue !== null) ? momentConstructor(otherValue) : momentConstructor();\r\n\r\n    return date.diff(date2, unit, precision);\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const NGX_MOMENT_OPTIONS: InjectionToken<NgxMomentOptions> = new InjectionToken<NgxMomentOptions>('NGX_MOMENT_OPTIONS');\r\n\r\nexport interface NgxMomentOptions {\r\n  /**\r\n   * relativeTimeThresholdOptions\r\n   * @description Provides the `relativeTimeThreshold` units allowing a pipe to set the `moment.relativeTimeThreshold` values.\r\n   * The `key` is a unit defined as one of `ss`, `s`, `m`, `h`, `d`, `M`.\r\n   * @see https://momentjs.com/docs/#/customization/relative-time-threshold/\r\n   * @example by default more than 45 seconds is considered a minute, more than 22 hours is considered a day and so on.\r\n   * So settings the unit 'm' to `59` will adjust the `relativeTimeThreshold` and consider more than 59 minutes\r\n   * to be an hour (default is `45 minutes`)\r\n   */\r\n  relativeTimeThresholdOptions: { [key: string]: number };\r\n}\r\n","import * as moment from 'moment';\r\n\r\nimport { Inject, Optional, Pipe, PipeTransform } from '@angular/core';\r\nimport { NGX_MOMENT_OPTIONS, NgxMomentOptions } from './moment-options';\r\n\r\n@Pipe({ name: 'amDuration' })\r\nexport class DurationPipe implements PipeTransform {\r\n\r\n  allowedUnits: Array<string> = ['ss', 's', 'm', 'h', 'd', 'M'];\r\n\r\n  constructor(@Optional() @Inject(NGX_MOMENT_OPTIONS) momentOptions?: NgxMomentOptions) {\r\n    this._applyOptions(momentOptions);\r\n  }\r\n\r\n  transform(value: any, ...args: string[]): string {\r\n    if (typeof args === 'undefined' || args.length !== 1) {\r\n      throw new Error('DurationPipe: missing required time unit argument');\r\n    }\r\n    return moment.duration(value, args[0] as moment.unitOfTime.DurationConstructor).humanize();\r\n  }\r\n\r\n  private _applyOptions(momentOptions: NgxMomentOptions): void {\r\n    if (!momentOptions) {\r\n      return;\r\n    }\r\n\r\n    if (!!momentOptions.relativeTimeThresholdOptions) {\r\n      const units: Array<string> = Object.keys(momentOptions.relativeTimeThresholdOptions);\r\n      const filteredUnits: Array<string> = units.filter(unit => this.allowedUnits.indexOf(unit) !== -1);\r\n      filteredUnits.forEach(unit => {\r\n        moment.relativeTimeThreshold(unit, momentOptions.relativeTimeThresholdOptions[unit]);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({ name: 'amFromUnix' })\r\nexport class FromUnixPipe implements PipeTransform {\r\n  transform(value: any, ...args: string[]): any {\r\n    if (typeof value === 'string') {\r\n      value = +value;\r\n    }\r\n    return moment.unix(value);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amParse' })\r\nexport class ParsePipe implements PipeTransform {\r\n  transform(value: string, formats: string|string[]): moment.Moment {\r\n    return momentConstructor(value, formats);\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({ name: 'amFromUtc' })\r\nexport class FromUtcPipe implements PipeTransform {\r\n  transform(value: any, formats?: string|string[], ...args: string[]): any {\r\n    return formats ? moment.utc(value, formats) : moment.utc(value);\r\n  }\r\n}\r\n","import * as moment from 'moment';\r\n\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({\r\n  name: 'amIsAfter'\r\n})\r\nexport class IsAfterPipe implements PipeTransform {\r\n\r\n  transform(value: Date | moment.Moment,\r\n    otherValue: Date | moment.Moment,\r\n    unit?: moment.unitOfTime.StartOf): boolean {\r\n    return momentConstructor(value).isAfter(momentConstructor(otherValue), unit);\r\n  }\r\n\r\n}\r\n","import * as moment from 'moment';\r\n\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({\r\n  name: 'amIsBefore'\r\n})\r\nexport class IsBeforePipe implements PipeTransform {\r\n\r\n  transform(value: Date | moment.Moment,\r\n    otherValue: Date | moment.Moment,\r\n    unit?: moment.unitOfTime.StartOf): boolean {\r\n    return momentConstructor(value).isBefore(momentConstructor(otherValue), unit);\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amLocal' })\r\nexport class LocalTimePipe implements PipeTransform {\r\n    transform(value: Date | moment.Moment | string | number): moment.Moment {\r\n        return momentConstructor(value).local();\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n// under systemjs, moment is actually exported as the default export, so we account for that\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amLocale' })\r\nexport class LocalePipe implements PipeTransform {\r\n  transform(value: string | Date, locale: string): moment.Moment {\r\n    return momentConstructor(value).locale(locale);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({ name: 'amParseZone' })\r\nexport class ParseZonePipe implements PipeTransform {\r\n  transform(value: string): moment.Moment {\r\n    return moment.parseZone(value);\r\n  }\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amSubtract' })\r\nexport class SubtractPipe implements PipeTransform {\r\n    transform(value: any, amount: moment.DurationInputArg1, unit?: moment.DurationInputArg2): any {\r\n        if (typeof amount === 'undefined' || (typeof amount === 'number' && typeof unit === 'undefined')) {\r\n            throw new Error('SubtractPipe: missing required arguments');\r\n        }\r\n        return momentConstructor(value).subtract(amount, unit);\r\n    }\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, ChangeDetectorRef, PipeTransform, OnDestroy, NgZone} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({name: 'amTimeAgo', pure: false})\r\nexport class TimeAgoPipe implements PipeTransform, OnDestroy {\r\n  private currentTimer: number | null;\r\n\r\n  private lastTime: Number;\r\n  private lastValue: moment.MomentInput;\r\n  private lastOmitSuffix: boolean;\r\n  private lastLocale?: string;\r\n  private lastText: string;\r\n  private formatFn: (m: moment.Moment) => string;\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, private ngZone: NgZone) {\r\n  }\r\n\r\n  format(m: moment.Moment) {\r\n    return m.from(momentConstructor(), this.lastOmitSuffix);\r\n  }\r\n\r\n  transform(value: moment.MomentInput, omitSuffix?: boolean, formatFn?: (m: moment.Moment) => string): string {\r\n    if (this.hasChanged(value, omitSuffix)) {\r\n      this.lastTime = this.getTime(value);\r\n      this.lastValue = value;\r\n      this.lastOmitSuffix = omitSuffix;\r\n      this.lastLocale = this.getLocale(value);\r\n      this.formatFn = formatFn || this.format.bind(this);\r\n      this.removeTimer();\r\n      this.createTimer();\r\n      this.lastText = this.formatFn(momentConstructor(value));\r\n\r\n    } else {\r\n      this.createTimer();\r\n    }\r\n\r\n    return this.lastText;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.removeTimer();\r\n  }\r\n\r\n  private createTimer() {\r\n    if (this.currentTimer) {\r\n      return;\r\n    }\r\n\r\n    const momentInstance = momentConstructor(this.lastValue);\r\n    const timeToUpdate = this.getSecondsUntilUpdate(momentInstance) * 1000;\r\n\r\n    this.currentTimer = this.ngZone.runOutsideAngular(() => {\r\n      if (typeof window !== 'undefined') {\r\n        return window.setTimeout(() => {\r\n          this.lastText = this.formatFn(momentConstructor(this.lastValue));\r\n\r\n          this.currentTimer = null;\r\n          this.ngZone.run(() => this.cdRef.markForCheck());\r\n        }, timeToUpdate);\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  }\r\n\r\n  private removeTimer() {\r\n    if (this.currentTimer) {\r\n      window.clearTimeout(this.currentTimer);\r\n      this.currentTimer = null;\r\n    }\r\n  }\r\n\r\n  private getSecondsUntilUpdate(momentInstance: moment.Moment) {\r\n    const howOld = Math.abs(momentConstructor().diff(momentInstance, 'minute'));\r\n    if (howOld < 1) {\r\n      return 1;\r\n    } else if (howOld < 60) {\r\n      return 30;\r\n    } else if (howOld < 180) {\r\n      return 300;\r\n    } else {\r\n      return 3600;\r\n    }\r\n  }\r\n\r\n  private hasChanged(value: moment.MomentInput, omitSuffix?: boolean): boolean {\r\n    return this.getTime(value) !== this.lastTime\r\n      || this.getLocale(value) !== this.lastLocale\r\n      || omitSuffix !== this.lastOmitSuffix;\r\n  }\r\n\r\n  private getTime(value: moment.MomentInput): number {\r\n    if (moment.isDate(value)) {\r\n      return value.getTime();\r\n    } else if (moment.isMoment(value)) {\r\n      return value.valueOf();\r\n    } else {\r\n      return momentConstructor(value).valueOf();\r\n    }\r\n  }\r\n\r\n  private getLocale(value: moment.MomentInput): string | null {\r\n    return moment.isMoment(value) ? value.locale() : moment.locale();\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amUtc' })\r\nexport class UtcPipe implements PipeTransform {\r\n  transform(value: Date | moment.Moment | string | number): moment.Moment {\r\n    return momentConstructor(value).utc();\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { NGX_MOMENT_OPTIONS, NgxMomentOptions } from './moment-options';\r\n\r\nimport { AddPipe } from './add.pipe';\r\nimport { CalendarPipe } from './calendar.pipe';\r\nimport { DateFormatPipe } from './date-format.pipe';\r\nimport { DifferencePipe } from './difference.pipe';\r\nimport { DurationPipe } from './duration.pipe';\r\nimport { FromUnixPipe } from './from-unix.pipe';\r\nimport { FromUtcPipe } from './from-utc.pipe';\r\nimport { IsAfterPipe } from './is-after.pipe';\r\nimport { IsBeforePipe } from './is-before.pipe';\r\nimport { LocalTimePipe } from './local.pipe';\r\nimport { LocalePipe } from './locale.pipe';\r\nimport { ParsePipe } from './parse.pipe';\r\nimport { ParseZonePipe } from './parse-zone.pipe';\r\nimport { SubtractPipe } from './subtract.pipe';\r\nimport { TimeAgoPipe } from './time-ago.pipe';\r\nimport { UtcPipe } from './utc.pipe';\r\n\r\nconst ANGULAR_MOMENT_PIPES = [\r\n  AddPipe,\r\n  CalendarPipe,\r\n  DateFormatPipe,\r\n  DifferencePipe,\r\n  DurationPipe,\r\n  FromUnixPipe,\r\n  ParsePipe,\r\n  SubtractPipe,\r\n  TimeAgoPipe,\r\n  UtcPipe,\r\n  FromUtcPipe,\r\n  LocalTimePipe,\r\n  LocalePipe,\r\n  ParseZonePipe,\r\n  IsBeforePipe,\r\n  IsAfterPipe\r\n];\r\n\r\n@NgModule({\r\n  declarations: ANGULAR_MOMENT_PIPES,\r\n  exports: ANGULAR_MOMENT_PIPES\r\n})\r\nexport class MomentModule {\r\n  static forRoot(options?: NgxMomentOptions): ModuleWithProviders {\r\n    return {\r\n      ngModule: MomentModule,\r\n      providers: [\r\n        {\r\n          provide: NGX_MOMENT_OPTIONS, useValue: {\r\n            ...options\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"]}