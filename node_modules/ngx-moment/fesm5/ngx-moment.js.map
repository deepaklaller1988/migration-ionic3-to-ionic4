{"version":3,"file":"ngx-moment.js.map","sources":["ng://ngx-moment/add.pipe.ts","ng://ngx-moment/calendar.pipe.ts","ng://ngx-moment/date-format.pipe.ts","ng://ngx-moment/difference.pipe.ts","ng://ngx-moment/moment-options.ts","ng://ngx-moment/duration.pipe.ts","ng://ngx-moment/from-unix.pipe.ts","ng://ngx-moment/parse.pipe.ts","ng://ngx-moment/from-utc.pipe.ts","ng://ngx-moment/is-after.pipe.ts","ng://ngx-moment/is-before.pipe.ts","ng://ngx-moment/local.pipe.ts","ng://ngx-moment/locale.pipe.ts","ng://ngx-moment/parse-zone.pipe.ts","ng://ngx-moment/subtract.pipe.ts","ng://ngx-moment/time-ago.pipe.ts","ng://ngx-moment/utc.pipe.ts","ng://ngx-moment/moment.module.ts"],"sourcesContent":["/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amAdd' })\r\nexport class AddPipe implements PipeTransform {\r\n    transform(value: any, amount: moment.DurationInputArg1, unit?: moment.DurationInputArg2): any {\r\n        if (typeof amount === 'undefined' || (typeof amount === 'number' && typeof unit === 'undefined')) {\r\n            throw new Error('AddPipe: missing required arguments');\r\n        }\r\n        return momentConstructor(value).add(amount, unit);\r\n    }\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport { Pipe, ChangeDetectorRef, PipeTransform, EventEmitter, OnDestroy, NgZone } from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport { Subscription } from 'rxjs';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amCalendar', pure: false })\r\nexport class CalendarPipe implements PipeTransform, OnDestroy {\r\n\r\n  /**\r\n   * Internal reference counter, so we can clean up when no instances are in use\r\n   */\r\n  private static refs = 0;\r\n\r\n  private static timer: number | null = null;\r\n  private static midnight: EventEmitter<Date> | null = null;\r\n\r\n  private midnightSub: Subscription;\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, private ngZone: NgZone) {\r\n    // using a single static timer for all instances of this pipe for performance reasons\r\n    CalendarPipe.initTimer(ngZone);\r\n\r\n    CalendarPipe.refs++;\r\n\r\n    // values such as Today will need to be replaced with Yesterday after midnight,\r\n    // so make sure we subscribe to an EventEmitter that we set up to emit at midnight\r\n    this.midnightSub = CalendarPipe.midnight.subscribe(() => {\r\n      this.ngZone.run(() => this.cdRef.markForCheck());\r\n    });\r\n  }\r\n\r\n  transform(value: Date | moment.Moment, ...args: any[]): any {\r\n    let formats: any = null;\r\n    let referenceTime: any = null;\r\n\r\n    for (let i = 0, len = args.length; i < len; i++) {\r\n      if (args[i] !== null) {\r\n        if (typeof args[i] === 'object' && !moment.isMoment(args[i])) {\r\n          formats = args[i];\r\n        } else {\r\n          referenceTime = momentConstructor(args[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return momentConstructor(value).calendar(referenceTime, formats);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (CalendarPipe.refs > 0) {\r\n      CalendarPipe.refs--;\r\n    }\r\n\r\n    if (CalendarPipe.refs === 0) {\r\n      CalendarPipe.removeTimer();\r\n    }\r\n\r\n    this.midnightSub.unsubscribe();\r\n  }\r\n\r\n  private static initTimer(ngZone: NgZone) {\r\n    // initialize the timer\r\n    if (!CalendarPipe.midnight) {\r\n      CalendarPipe.midnight = new EventEmitter<Date>();\r\n      if (typeof window !== 'undefined') {\r\n        const timeToUpdate = CalendarPipe._getMillisecondsUntilUpdate();\r\n        CalendarPipe.timer = ngZone.runOutsideAngular(() => {\r\n          return window.setTimeout(() => {\r\n            // emit the current date\r\n            CalendarPipe.midnight.emit(new Date());\r\n\r\n            // refresh the timer\r\n            CalendarPipe.removeTimer();\r\n            CalendarPipe.initTimer(ngZone);\r\n          }, timeToUpdate);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private static removeTimer() {\r\n    if (CalendarPipe.timer) {\r\n      window.clearTimeout(CalendarPipe.timer);\r\n      CalendarPipe.timer = null;\r\n      CalendarPipe.midnight = null;\r\n    }\r\n  }\r\n\r\n  private static _getMillisecondsUntilUpdate() {\r\n    const now = momentConstructor();\r\n    const tomorrow = momentConstructor().startOf('day').add(1, 'days');\r\n    const timeToMidnight = tomorrow.valueOf() - now.valueOf();\r\n    return timeToMidnight + 1000; // 1 second after midnight\r\n  }\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amDateFormat' })\r\nexport class DateFormatPipe implements PipeTransform {\r\n  transform(value: Date | moment.Moment | string | number, ...args: any[]): string {\r\n    if (!value) { return ''; }\r\n    return momentConstructor(value).format(args[0]);\r\n  }\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amDifference' })\r\nexport class DifferencePipe implements PipeTransform {\r\n  transform(value: Date | moment.Moment,\r\n            otherValue: Date | moment.Moment,\r\n            unit?: moment.unitOfTime.Diff,\r\n            precision?: boolean): number {\r\n\r\n    const date = momentConstructor(value);\r\n    const date2 = (otherValue !== null) ? momentConstructor(otherValue) : momentConstructor();\r\n\r\n    return date.diff(date2, unit, precision);\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const NGX_MOMENT_OPTIONS: InjectionToken<NgxMomentOptions> = new InjectionToken<NgxMomentOptions>('NGX_MOMENT_OPTIONS');\r\n\r\nexport interface NgxMomentOptions {\r\n  /**\r\n   * relativeTimeThresholdOptions\r\n   * @description Provides the `relativeTimeThreshold` units allowing a pipe to set the `moment.relativeTimeThreshold` values.\r\n   * The `key` is a unit defined as one of `ss`, `s`, `m`, `h`, `d`, `M`.\r\n   * @see https://momentjs.com/docs/#/customization/relative-time-threshold/\r\n   * @example by default more than 45 seconds is considered a minute, more than 22 hours is considered a day and so on.\r\n   * So settings the unit 'm' to `59` will adjust the `relativeTimeThreshold` and consider more than 59 minutes\r\n   * to be an hour (default is `45 minutes`)\r\n   */\r\n  relativeTimeThresholdOptions: { [key: string]: number };\r\n}\r\n","import * as moment from 'moment';\r\n\r\nimport { Inject, Optional, Pipe, PipeTransform } from '@angular/core';\r\nimport { NGX_MOMENT_OPTIONS, NgxMomentOptions } from './moment-options';\r\n\r\n@Pipe({ name: 'amDuration' })\r\nexport class DurationPipe implements PipeTransform {\r\n\r\n  allowedUnits: Array<string> = ['ss', 's', 'm', 'h', 'd', 'M'];\r\n\r\n  constructor(@Optional() @Inject(NGX_MOMENT_OPTIONS) momentOptions?: NgxMomentOptions) {\r\n    this._applyOptions(momentOptions);\r\n  }\r\n\r\n  transform(value: any, ...args: string[]): string {\r\n    if (typeof args === 'undefined' || args.length !== 1) {\r\n      throw new Error('DurationPipe: missing required time unit argument');\r\n    }\r\n    return moment.duration(value, args[0] as moment.unitOfTime.DurationConstructor).humanize();\r\n  }\r\n\r\n  private _applyOptions(momentOptions: NgxMomentOptions): void {\r\n    if (!momentOptions) {\r\n      return;\r\n    }\r\n\r\n    if (!!momentOptions.relativeTimeThresholdOptions) {\r\n      const units: Array<string> = Object.keys(momentOptions.relativeTimeThresholdOptions);\r\n      const filteredUnits: Array<string> = units.filter(unit => this.allowedUnits.indexOf(unit) !== -1);\r\n      filteredUnits.forEach(unit => {\r\n        moment.relativeTimeThreshold(unit, momentOptions.relativeTimeThresholdOptions[unit]);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({ name: 'amFromUnix' })\r\nexport class FromUnixPipe implements PipeTransform {\r\n  transform(value: any, ...args: string[]): any {\r\n    if (typeof value === 'string') {\r\n      value = +value;\r\n    }\r\n    return moment.unix(value);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amParse' })\r\nexport class ParsePipe implements PipeTransform {\r\n  transform(value: string, formats: string|string[]): moment.Moment {\r\n    return momentConstructor(value, formats);\r\n  }\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({ name: 'amFromUtc' })\r\nexport class FromUtcPipe implements PipeTransform {\r\n  transform(value: any, formats?: string|string[], ...args: string[]): any {\r\n    return formats ? moment.utc(value, formats) : moment.utc(value);\r\n  }\r\n}\r\n","import * as moment from 'moment';\r\n\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({\r\n  name: 'amIsAfter'\r\n})\r\nexport class IsAfterPipe implements PipeTransform {\r\n\r\n  transform(value: Date | moment.Moment,\r\n    otherValue: Date | moment.Moment,\r\n    unit?: moment.unitOfTime.StartOf): boolean {\r\n    return momentConstructor(value).isAfter(momentConstructor(otherValue), unit);\r\n  }\r\n\r\n}\r\n","import * as moment from 'moment';\r\n\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({\r\n  name: 'amIsBefore'\r\n})\r\nexport class IsBeforePipe implements PipeTransform {\r\n\r\n  transform(value: Date | moment.Moment,\r\n    otherValue: Date | moment.Moment,\r\n    unit?: moment.unitOfTime.StartOf): boolean {\r\n    return momentConstructor(value).isBefore(momentConstructor(otherValue), unit);\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amLocal' })\r\nexport class LocalTimePipe implements PipeTransform {\r\n    transform(value: Date | moment.Moment | string | number): moment.Moment {\r\n        return momentConstructor(value).local();\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n// under systemjs, moment is actually exported as the default export, so we account for that\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amLocale' })\r\nexport class LocalePipe implements PipeTransform {\r\n  transform(value: string | Date, locale: string): moment.Moment {\r\n    return momentConstructor(value).locale(locale);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({ name: 'amParseZone' })\r\nexport class ParseZonePipe implements PipeTransform {\r\n  transform(value: string): moment.Moment {\r\n    return moment.parseZone(value);\r\n  }\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amSubtract' })\r\nexport class SubtractPipe implements PipeTransform {\r\n    transform(value: any, amount: moment.DurationInputArg1, unit?: moment.DurationInputArg2): any {\r\n        if (typeof amount === 'undefined' || (typeof amount === 'number' && typeof unit === 'undefined')) {\r\n            throw new Error('SubtractPipe: missing required arguments');\r\n        }\r\n        return momentConstructor(value).subtract(amount, unit);\r\n    }\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, ChangeDetectorRef, PipeTransform, OnDestroy, NgZone} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({name: 'amTimeAgo', pure: false})\r\nexport class TimeAgoPipe implements PipeTransform, OnDestroy {\r\n  private currentTimer: number | null;\r\n\r\n  private lastTime: Number;\r\n  private lastValue: moment.MomentInput;\r\n  private lastOmitSuffix: boolean;\r\n  private lastLocale?: string;\r\n  private lastText: string;\r\n  private formatFn: (m: moment.Moment) => string;\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, private ngZone: NgZone) {\r\n  }\r\n\r\n  format(m: moment.Moment) {\r\n    return m.from(momentConstructor(), this.lastOmitSuffix);\r\n  }\r\n\r\n  transform(value: moment.MomentInput, omitSuffix?: boolean, formatFn?: (m: moment.Moment) => string): string {\r\n    if (this.hasChanged(value, omitSuffix)) {\r\n      this.lastTime = this.getTime(value);\r\n      this.lastValue = value;\r\n      this.lastOmitSuffix = omitSuffix;\r\n      this.lastLocale = this.getLocale(value);\r\n      this.formatFn = formatFn || this.format.bind(this);\r\n      this.removeTimer();\r\n      this.createTimer();\r\n      this.lastText = this.formatFn(momentConstructor(value));\r\n\r\n    } else {\r\n      this.createTimer();\r\n    }\r\n\r\n    return this.lastText;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.removeTimer();\r\n  }\r\n\r\n  private createTimer() {\r\n    if (this.currentTimer) {\r\n      return;\r\n    }\r\n\r\n    const momentInstance = momentConstructor(this.lastValue);\r\n    const timeToUpdate = this.getSecondsUntilUpdate(momentInstance) * 1000;\r\n\r\n    this.currentTimer = this.ngZone.runOutsideAngular(() => {\r\n      if (typeof window !== 'undefined') {\r\n        return window.setTimeout(() => {\r\n          this.lastText = this.formatFn(momentConstructor(this.lastValue));\r\n\r\n          this.currentTimer = null;\r\n          this.ngZone.run(() => this.cdRef.markForCheck());\r\n        }, timeToUpdate);\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  }\r\n\r\n  private removeTimer() {\r\n    if (this.currentTimer) {\r\n      window.clearTimeout(this.currentTimer);\r\n      this.currentTimer = null;\r\n    }\r\n  }\r\n\r\n  private getSecondsUntilUpdate(momentInstance: moment.Moment) {\r\n    const howOld = Math.abs(momentConstructor().diff(momentInstance, 'minute'));\r\n    if (howOld < 1) {\r\n      return 1;\r\n    } else if (howOld < 60) {\r\n      return 30;\r\n    } else if (howOld < 180) {\r\n      return 300;\r\n    } else {\r\n      return 3600;\r\n    }\r\n  }\r\n\r\n  private hasChanged(value: moment.MomentInput, omitSuffix?: boolean): boolean {\r\n    return this.getTime(value) !== this.lastTime\r\n      || this.getLocale(value) !== this.lastLocale\r\n      || omitSuffix !== this.lastOmitSuffix;\r\n  }\r\n\r\n  private getTime(value: moment.MomentInput): number {\r\n    if (moment.isDate(value)) {\r\n      return value.getTime();\r\n    } else if (moment.isMoment(value)) {\r\n      return value.valueOf();\r\n    } else {\r\n      return momentConstructor(value).valueOf();\r\n    }\r\n  }\r\n\r\n  private getLocale(value: moment.MomentInput): string | null {\r\n    return moment.isMoment(value) ? value.locale() : moment.locale();\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amUtc' })\r\nexport class UtcPipe implements PipeTransform {\r\n  transform(value: Date | moment.Moment | string | number): moment.Moment {\r\n    return momentConstructor(value).utc();\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { NGX_MOMENT_OPTIONS, NgxMomentOptions } from './moment-options';\r\n\r\nimport { AddPipe } from './add.pipe';\r\nimport { CalendarPipe } from './calendar.pipe';\r\nimport { DateFormatPipe } from './date-format.pipe';\r\nimport { DifferencePipe } from './difference.pipe';\r\nimport { DurationPipe } from './duration.pipe';\r\nimport { FromUnixPipe } from './from-unix.pipe';\r\nimport { FromUtcPipe } from './from-utc.pipe';\r\nimport { IsAfterPipe } from './is-after.pipe';\r\nimport { IsBeforePipe } from './is-before.pipe';\r\nimport { LocalTimePipe } from './local.pipe';\r\nimport { LocalePipe } from './locale.pipe';\r\nimport { ParsePipe } from './parse.pipe';\r\nimport { ParseZonePipe } from './parse-zone.pipe';\r\nimport { SubtractPipe } from './subtract.pipe';\r\nimport { TimeAgoPipe } from './time-ago.pipe';\r\nimport { UtcPipe } from './utc.pipe';\r\n\r\nconst ANGULAR_MOMENT_PIPES = [\r\n  AddPipe,\r\n  CalendarPipe,\r\n  DateFormatPipe,\r\n  DifferencePipe,\r\n  DurationPipe,\r\n  FromUnixPipe,\r\n  ParsePipe,\r\n  SubtractPipe,\r\n  TimeAgoPipe,\r\n  UtcPipe,\r\n  FromUtcPipe,\r\n  LocalTimePipe,\r\n  LocalePipe,\r\n  ParseZonePipe,\r\n  IsBeforePipe,\r\n  IsAfterPipe\r\n];\r\n\r\n@NgModule({\r\n  declarations: ANGULAR_MOMENT_PIPES,\r\n  exports: ANGULAR_MOMENT_PIPES\r\n})\r\nexport class MomentModule {\r\n  static forRoot(options?: NgxMomentOptions): ModuleWithProviders {\r\n    return {\r\n      ngModule: MomentModule,\r\n      providers: [\r\n        {\r\n          provide: NGX_MOMENT_OPTIONS, useValue: {\r\n            ...options\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"names":["momentConstructor","moment.isMoment","moment.duration","moment.relativeTimeThreshold","moment.unix","moment.utc","locale","moment.parseZone","moment.isDate","moment.locale"],"mappings":";;;;;;;;;;IAKM,iBAAiB,GAAG,MAAM;AAEhC;IAAA;KAQC;;;;;;;IANG,2BAAS;;;;;;IAAT,UAAU,KAAU,EAAE,MAAgC,EAAE,IAA+B;QACnF,IAAI,OAAO,MAAM,KAAK,WAAW,KAAK,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,IAAI,KAAK,WAAW,CAAC,EAAE;YAC9F,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;SAC1D;QACD,OAAO,iBAAiB,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;KACrD;;gBAPJ,IAAI,SAAC,EAAE,IAAI,EAAE,OAAO,EAAE;;IAQvB,cAAC;CARD;;;;;;;ICDMA,mBAAiB,GAAG,MAAM;AAEhC;IAaE,sBAAoB,KAAwB,EAAU,MAAc;QAApE,iBAWC;QAXmB,UAAK,GAAL,KAAK,CAAmB;QAAU,WAAM,GAAN,MAAM,CAAQ;;QAElE,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAE/B,YAAY,CAAC,IAAI,EAAE,CAAC;;;QAIpB,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC;YACjD,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,CAAC,YAAY,EAAE,GAAA,CAAC,CAAC;SAClD,CAAC,CAAC;KACJ;;;;;;IAED,gCAAS;;;;;IAAT,UAAU,KAA2B;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;;YAC/C,OAAO,GAAQ,IAAI;;YACnB,aAAa,GAAQ,IAAI;QAE7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC/C,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;gBACpB,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,CAACC,QAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;oBAC5D,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;iBACnB;qBAAM;oBACL,aAAa,GAAGD,mBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC5C;aACF;SACF;QAED,OAAOA,mBAAiB,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;KAClE;;;;IAED,kCAAW;;;IAAX;QACE,IAAI,YAAY,CAAC,IAAI,GAAG,CAAC,EAAE;YACzB,YAAY,CAAC,IAAI,EAAE,CAAC;SACrB;QAED,IAAI,YAAY,CAAC,IAAI,KAAK,CAAC,EAAE;YAC3B,YAAY,CAAC,WAAW,EAAE,CAAC;SAC5B;QAED,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;KAChC;;;;;IAEc,sBAAS;;;;IAAxB,UAAyB,MAAc;;QAErC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;YAC1B,YAAY,CAAC,QAAQ,GAAG,IAAI,YAAY,EAAQ,CAAC;YACjD,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;;oBAC3B,cAAY,GAAG,YAAY,CAAC,2BAA2B,EAAE;gBAC/D,YAAY,CAAC,KAAK,GAAG,MAAM,CAAC,iBAAiB,CAAC;oBAC5C,OAAO,MAAM,CAAC,UAAU,CAAC;;wBAEvB,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;;wBAGvC,YAAY,CAAC,WAAW,EAAE,CAAC;wBAC3B,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;qBAChC,EAAE,cAAY,CAAC,CAAC;iBAClB,CAAC,CAAC;aACJ;SACF;KACF;;;;IAEc,wBAAW;;;IAA1B;QACE,IAAI,YAAY,CAAC,KAAK,EAAE;YACtB,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACxC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC;YAC1B,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC;SAC9B;KACF;;;;IAEc,wCAA2B;;;IAA1C;;YACQ,GAAG,GAAGA,mBAAiB,EAAE;;YACzB,QAAQ,GAAGA,mBAAiB,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC;;YAC5D,cAAc,GAAG,QAAQ,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE;QACzD,OAAO,cAAc,GAAG,IAAI,CAAC;KAC9B;;;;IAlFc,iBAAI,GAAG,CAAC,CAAC;IAET,kBAAK,GAAkB,IAAI,CAAC;IAC5B,qBAAQ,GAA8B,IAAI,CAAC;;gBAT3D,IAAI,SAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,KAAK,EAAE;;;;gBAN1B,iBAAiB;gBAA0C,MAAM;;IA+FhF,mBAAC;CAzFD;;;;;;;ICHMA,mBAAiB,GAAG,MAAM;AAEhC;IAAA;KAMC;;;;;;IAJC,kCAAS;;;;;IAAT,UAAU,KAA6C;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QACrE,IAAI,CAAC,KAAK,EAAE;YAAE,OAAO,EAAE,CAAC;SAAE;QAC1B,OAAOA,mBAAiB,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KACjD;;gBALF,IAAI,SAAC,EAAE,IAAI,EAAE,cAAc,EAAE;;IAM9B,qBAAC;CAND;;;;;;;ICFMA,mBAAiB,GAAG,MAAM;AAEhC;IAAA;KAYC;;;;;;;;IAVC,kCAAS;;;;;;;IAAT,UAAU,KAA2B,EAC3B,UAAgC,EAChC,IAA6B,EAC7B,SAAmB;;YAErB,IAAI,GAAGA,mBAAiB,CAAC,KAAK,CAAC;;YAC/B,KAAK,GAAG,CAAC,UAAU,KAAK,IAAI,IAAIA,mBAAiB,CAAC,UAAU,CAAC,GAAGA,mBAAiB,EAAE;QAEzF,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;KAC1C;;gBAXF,IAAI,SAAC,EAAE,IAAI,EAAE,cAAc,EAAE;;IAY9B,qBAAC;CAZD;;;;;;ACPA;AAEA,IAAa,kBAAkB,GAAqC,IAAI,cAAc,CAAmB,oBAAoB,CAAC;;;;;;ACF9H;IAUE,sBAAoD,aAAgC;QAFpF,iBAAY,GAAkB,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAG5D,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;KACnC;;;;;;IAED,gCAAS;;;;;IAAT,UAAU,KAAU;QAAE,cAAiB;aAAjB,UAAiB,EAAjB,qBAAiB,EAAjB,IAAiB;YAAjB,6BAAiB;;QACrC,IAAI,OAAO,IAAI,KAAK,WAAW,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YACpD,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;SACtE;QACD,OAAOE,QAAe,CAAC,KAAK,qBAAE,IAAI,CAAC,CAAC,CAAC,GAA0C,CAAC,QAAQ,EAAE,CAAC;KAC5F;;;;;IAEO,oCAAa;;;;IAArB,UAAsB,aAA+B;QAArD,iBAYC;QAXC,IAAI,CAAC,aAAa,EAAE;YAClB,OAAO;SACR;QAED,IAAI,CAAC,CAAC,aAAa,CAAC,4BAA4B,EAAE;;gBAC1C,KAAK,GAAkB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,4BAA4B,CAAC;;gBAC9E,aAAa,GAAkB,KAAK,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAA,CAAC;YACjG,aAAa,CAAC,OAAO,CAAC,UAAA,IAAI;gBACxBC,qBAA4B,CAAC,IAAI,EAAE,aAAa,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC,CAAC;aACtF,CAAC,CAAC;SACJ;KACF;;gBA5BF,IAAI,SAAC,EAAE,IAAI,EAAE,YAAY,EAAE;;;;gDAKb,QAAQ,YAAI,MAAM,SAAC,kBAAkB;;IAyBpD,mBAAC;CA9BD;;;;;;;ICAA;KAQC;;;;;;IANC,gCAAS;;;;;IAAT,UAAU,KAAU;QAAE,cAAiB;aAAjB,UAAiB,EAAjB,qBAAiB,EAAjB,IAAiB;YAAjB,6BAAiB;;QACrC,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC7B,KAAK,GAAG,CAAC,KAAK,CAAC;SAChB;QACD,OAAOC,IAAW,CAAC,KAAK,CAAC,CAAC;KAC3B;;gBAPF,IAAI,SAAC,EAAE,IAAI,EAAE,YAAY,EAAE;;IAQ5B,mBAAC;CARD;;;;;;ACLA;IAGMJ,mBAAiB,GAAG,MAAM;AAEhC;IAAA;KAKC;;;;;;IAHC,6BAAS;;;;;IAAT,UAAU,KAAa,EAAE,OAAwB;QAC/C,OAAOA,mBAAiB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KAC1C;;gBAJF,IAAI,SAAC,EAAE,IAAI,EAAE,SAAS,EAAE;;IAKzB,gBAAC;CALD;;;;;;;ICAA;KAKC;;;;;;;IAHC,+BAAS;;;;;;IAAT,UAAU,KAAU,EAAE,OAAyB;QAAE,cAAiB;aAAjB,UAAiB,EAAjB,qBAAiB,EAAjB,IAAiB;YAAjB,6BAAiB;;QAChE,OAAO,OAAO,GAAGK,GAAU,CAAC,KAAK,EAAE,OAAO,CAAC,GAAGA,GAAU,CAAC,KAAK,CAAC,CAAC;KACjE;;gBAJF,IAAI,SAAC,EAAE,IAAI,EAAE,WAAW,EAAE;;IAK3B,kBAAC;CALD;;;;;;ACLA;IAIML,mBAAiB,GAAG,MAAM;AAEhC;IAAA;KAWC;;;;;;;IANC,+BAAS;;;;;;IAAT,UAAU,KAA2B,EACnC,UAAgC,EAChC,IAAgC;QAChC,OAAOA,mBAAiB,CAAC,KAAK,CAAC,CAAC,OAAO,CAACA,mBAAiB,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,CAAC;KAC9E;;gBATF,IAAI,SAAC;oBACJ,IAAI,EAAE,WAAW;iBAClB;;IASD,kBAAC;CAXD;;;;;;ACNA;IAIMA,mBAAiB,GAAG,MAAM;AAEhC;IAAA;KAWC;;;;;;;IANC,gCAAS;;;;;;IAAT,UAAU,KAA2B,EACnC,UAAgC,EAChC,IAAgC;QAChC,OAAOA,mBAAiB,CAAC,KAAK,CAAC,CAAC,QAAQ,CAACA,mBAAiB,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,CAAC;KAC/E;;gBATF,IAAI,SAAC;oBACJ,IAAI,EAAE,YAAY;iBACnB;;IASD,mBAAC;CAXD;;;;;;ACNA;IAGMA,mBAAiB,GAAG,MAAM;AAEhC;IAAA;KAKC;;;;;IAHG,iCAAS;;;;IAAT,UAAU,KAA6C;QACnD,OAAOA,mBAAiB,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;KAC3C;;gBAJJ,IAAI,SAAC,EAAE,IAAI,EAAE,SAAS,EAAE;;IAKzB,oBAAC;CALD;;;;;;ACLA;;IAIMA,mBAAiB,GAAG,MAAM;AAEhC;IAAA;KAKC;;;;;;IAHC,8BAAS;;;;;IAAT,UAAU,KAAoB,EAAEM,SAAc;QAC5C,OAAON,mBAAiB,CAAC,KAAK,CAAC,CAAC,MAAM,CAACM,SAAM,CAAC,CAAC;KAChD;;gBAJF,IAAI,SAAC,EAAE,IAAI,EAAE,UAAU,EAAE;;IAK1B,iBAAC;CALD;;;;;;ACNA;IAGA;KAKC;;;;;IAHC,iCAAS;;;;IAAT,UAAU,KAAa;QACrB,OAAOC,SAAgB,CAAC,KAAK,CAAC,CAAC;KAChC;;gBAJF,IAAI,SAAC,EAAE,IAAI,EAAE,aAAa,EAAE;;IAK7B,oBAAC;CALD;;;;;;;ICEMP,mBAAiB,GAAG,MAAM;AAEhC;IAAA;KAQC;;;;;;;IANG,gCAAS;;;;;;IAAT,UAAU,KAAU,EAAE,MAAgC,EAAE,IAA+B;QACnF,IAAI,OAAO,MAAM,KAAK,WAAW,KAAK,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,IAAI,KAAK,WAAW,CAAC,EAAE;YAC9F,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;SAC/D;QACD,OAAOA,mBAAiB,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;KAC1D;;gBAPJ,IAAI,SAAC,EAAE,IAAI,EAAE,YAAY,EAAE;;IAQ5B,mBAAC;CARD;;;;;;;ICFMA,mBAAiB,GAAG,MAAM;AAEhC;IAWE,qBAAoB,KAAwB,EAAU,MAAc;QAAhD,UAAK,GAAL,KAAK,CAAmB;QAAU,WAAM,GAAN,MAAM,CAAQ;KACnE;;;;;IAED,4BAAM;;;;IAAN,UAAO,CAAgB;QACrB,OAAO,CAAC,CAAC,IAAI,CAACA,mBAAiB,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;KACzD;;;;;;;IAED,+BAAS;;;;;;IAAT,UAAU,KAAyB,EAAE,UAAoB,EAAE,QAAuC;QAChG,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,EAAE;YACtC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACpC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;YACjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACxC,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnD,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAACA,mBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;SAEzD;aAAM;YACL,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;QAED,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;IAED,iCAAW;;;IAAX;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;;;;IAEO,iCAAW;;;IAAnB;QAAA,iBAoBC;QAnBC,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,OAAO;SACR;;YAEK,cAAc,GAAGA,mBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC;;YAClD,YAAY,GAAG,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,GAAG,IAAI;QAEtE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;YAChD,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;gBACjC,OAAO,MAAM,CAAC,UAAU,CAAC;oBACvB,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAACA,mBAAiB,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC;oBAEjE,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,CAAC,YAAY,EAAE,GAAA,CAAC,CAAC;iBAClD,EAAE,YAAY,CAAC,CAAC;aAClB;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;SACF,CAAC,CAAC;KACJ;;;;IAEO,iCAAW;;;IAAnB;QACE,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACvC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC1B;KACF;;;;;IAEO,2CAAqB;;;;IAA7B,UAA8B,cAA6B;;YACnD,MAAM,GAAG,IAAI,CAAC,GAAG,CAACA,mBAAiB,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;QAC3E,IAAI,MAAM,GAAG,CAAC,EAAE;YACd,OAAO,CAAC,CAAC;SACV;aAAM,IAAI,MAAM,GAAG,EAAE,EAAE;YACtB,OAAO,EAAE,CAAC;SACX;aAAM,IAAI,MAAM,GAAG,GAAG,EAAE;YACvB,OAAO,GAAG,CAAC;SACZ;aAAM;YACL,OAAO,IAAI,CAAC;SACb;KACF;;;;;;IAEO,gCAAU;;;;;IAAlB,UAAmB,KAAyB,EAAE,UAAoB;QAChE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,QAAQ;eACvC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,UAAU;eACzC,UAAU,KAAK,IAAI,CAAC,cAAc,CAAC;KACzC;;;;;IAEO,6BAAO;;;;IAAf,UAAgB,KAAyB;QACvC,IAAIQ,MAAa,CAAC,KAAK,CAAC,EAAE;YACxB,OAAO,KAAK,CAAC,OAAO,EAAE,CAAC;SACxB;aAAM,IAAIP,QAAe,CAAC,KAAK,CAAC,EAAE;YACjC,OAAO,KAAK,CAAC,OAAO,EAAE,CAAC;SACxB;aAAM;YACL,OAAOD,mBAAiB,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;SAC3C;KACF;;;;;IAEO,+BAAS;;;;IAAjB,UAAkB,KAAyB;QACzC,OAAOC,QAAe,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,GAAGQ,MAAa,EAAE,CAAC;KAClE;;gBApGF,IAAI,SAAC,EAAC,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAC;;;;gBALxB,iBAAiB;gBAA4B,MAAM;;IA0GjE,kBAAC;CArGD;;;;;;ACPA;IAGMT,mBAAiB,GAAG,MAAM;AAEhC;IAAA;KAKC;;;;;IAHC,2BAAS;;;;IAAT,UAAU,KAA6C;QACrD,OAAOA,mBAAiB,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC;KACvC;;gBAJF,IAAI,SAAC,EAAE,IAAI,EAAE,OAAO,EAAE;;IAKvB,cAAC;CALD;;;;;;;ICeM,oBAAoB,GAAG;IAC3B,OAAO;IACP,YAAY;IACZ,cAAc;IACd,cAAc;IACd,YAAY;IACZ,YAAY;IACZ,SAAS;IACT,YAAY;IACZ,WAAW;IACX,OAAO;IACP,WAAW;IACX,aAAa;IACb,UAAU;IACV,aAAa;IACb,YAAY;IACZ,WAAW;CACZ;AAED;IAAA;KAiBC;;;;;IAZQ,oBAAO;;;;IAAd,UAAe,OAA0B;QACvC,OAAO;YACL,QAAQ,EAAE,YAAY;YACtB,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,kBAAkB,EAAE,QAAQ,eAChC,OAAO,CACX;iBACF;aACF;SACF,CAAC;KACH;;gBAhBF,QAAQ,SAAC;oBACR,YAAY,EAAE,oBAAoB;oBAClC,OAAO,EAAE,oBAAoB;iBAC9B;;IAcD,mBAAC;CAjBD;;;;;;;;;;;;;;"}
