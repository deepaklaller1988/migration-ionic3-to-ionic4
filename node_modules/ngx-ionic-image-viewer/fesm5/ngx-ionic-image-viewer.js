import { Injectable, ɵɵdefineInjectable, Component, Input, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';
import { __assign, __awaiter, __generator } from 'tslib';
import { ModalController, IonicModule } from '@ionic/angular';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var NgxIonicImageViewerService = /** @class */ (function () {
    function NgxIonicImageViewerService() {
    }
    NgxIonicImageViewerService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    NgxIonicImageViewerService.ctorParameters = function () { return []; };
    /** @nocollapse */ NgxIonicImageViewerService.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgxIonicImageViewerService_Factory() { return new NgxIonicImageViewerService(); }, token: NgxIonicImageViewerService, providedIn: "root" });
    return NgxIonicImageViewerService;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var ViewerModalComponent = /** @class */ (function () {
    function ViewerModalComponent(modalController) {
        this.modalController = modalController;
        this.defaultSlideOpts = {
            centeredSlides: 'true',
            zoom: {
                enabled: true
            }
        };
        this.options = __assign({}, this.defaultSlideOpts);
    }
    /**
     * @return {?}
     */
    ViewerModalComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.slides.update();
    };
    /**
     * @return {?}
     */
    ViewerModalComponent.prototype.closeModal = /**
     * @return {?}
     */
    function () {
        this.modalController.dismiss();
    };
    ViewerModalComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ion-viewer-modal',
                    template: "<ion-header [ngClass]=\"{ 'no-title': title.length <= 0 }\">\n  <ion-toolbar>\n    <ion-buttons slot=\"primary\">\n      <ion-button (click)=\"closeModal()\"> <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon> </ion-button>\n    </ion-buttons>\n    <ion-title>{{ title }}</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [forceOverscroll]=\"false\" fullscreen=\"true\">\n  <ion-slides [options]=\"options\" #sliderRef>\n    <ion-slide>\n      <div class=\"swiper-zoom-container\">\n        <img alt=\"alt\" [src]=\"src\" height=\"100vh\" />\n      </div>\n    </ion-slide>\n  </ion-slides>\n</ion-content>\n\n<ion-footer [ngClass]=\"{ 'no-text': text.length <= 0 }\">\n  <ion-toolbar class=\"ion-text-center\">\n    <ion-text>{{ text }}</ion-text>\n  </ion-toolbar>\n</ion-footer>\n",
                    styles: ["ion-slides{--height:100%;height:100%}ion-toolbar{--border-style:none;--background:rgba(var(--ion-background-color-rgb, (255, 255, 255)), 0.6);background:rgba(var(--ion-background-color-rgb,255,255,255),.6)}ion-header{position:absolute}ion-header.no-title:after{content:none}ion-header.no-title ion-toolbar{--background:rgba(0, 0, 0, 0);background:rgba(0,0,0,0)}ion-footer{position:absolute;bottom:0}ion-footer.no-text:before{content:none}ion-footer.no-text ion-toolbar{--background:rgba(0, 0, 0, 0);background:rgba(0,0,0,0)}"]
                }] }
    ];
    /** @nocollapse */
    ViewerModalComponent.ctorParameters = function () { return [
        { type: ModalController }
    ]; };
    ViewerModalComponent.propDecorators = {
        src: [{ type: Input }],
        alt: [{ type: Input }],
        title: [{ type: Input }],
        text: [{ type: Input }],
        options: [{ type: Input }],
        slides: [{ type: ViewChild, args: ['sliderRef', { static: true },] }]
    };
    return ViewerModalComponent;
}());
if (false) {
    /** @type {?} */
    ViewerModalComponent.prototype.src;
    /** @type {?} */
    ViewerModalComponent.prototype.alt;
    /** @type {?} */
    ViewerModalComponent.prototype.title;
    /** @type {?} */
    ViewerModalComponent.prototype.text;
    /** @type {?} */
    ViewerModalComponent.prototype.defaultSlideOpts;
    /** @type {?} */
    ViewerModalComponent.prototype.options;
    /** @type {?} */
    ViewerModalComponent.prototype.slides;
    /**
     * @type {?}
     * @private
     */
    ViewerModalComponent.prototype.modalController;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var NgxIonicImageViewerComponent = /** @class */ (function () {
    function NgxIonicImageViewerComponent(modalController) {
        this.modalController = modalController;
    }
    /**
     * @param {?} src
     * @param {?=} title
     * @param {?=} text
     * @return {?}
     */
    NgxIonicImageViewerComponent.prototype.viewImage = /**
     * @param {?} src
     * @param {?=} title
     * @param {?=} text
     * @return {?}
     */
    function (src, title, text) {
        if (title === void 0) { title = ''; }
        if (text === void 0) { text = ''; }
        return __awaiter(this, void 0, void 0, function () {
            var modal;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.modalController.create({
                            component: ViewerModalComponent,
                            componentProps: {
                                src: src,
                                title: title,
                                text: text
                            },
                            cssClass: 'modal-fullscreen',
                            keyboardClose: true,
                            showBackdrop: true
                        })];
                    case 1:
                        modal = _a.sent();
                        return [4 /*yield*/, modal.present()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * @return {?}
     */
    NgxIonicImageViewerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    NgxIonicImageViewerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ion-img-viewer',
                    template: "<ion-img [alt]=\"alt\" [src]=\"src\" (click)=\"viewImage(src, title, text)\"></ion-img>\n",
                    encapsulation: ViewEncapsulation.None,
                    styles: ["\n      .modal-fullscreen {\n        --border-radius: 0;\n        border-radius: 0;\n      }\n      .modal-fullscreen .modal-wrapper {\n        position: absolute;\n        top: 0;\n        left: 0;\n        display: block;\n        width: 100%;\n        height: 100%;\n      }\n    "]
                }] }
    ];
    /** @nocollapse */
    NgxIonicImageViewerComponent.ctorParameters = function () { return [
        { type: ModalController }
    ]; };
    NgxIonicImageViewerComponent.propDecorators = {
        src: [{ type: Input }],
        alt: [{ type: Input }],
        title: [{ type: Input }],
        text: [{ type: Input }]
    };
    return NgxIonicImageViewerComponent;
}());
if (false) {
    /** @type {?} */
    NgxIonicImageViewerComponent.prototype.src;
    /** @type {?} */
    NgxIonicImageViewerComponent.prototype.alt;
    /** @type {?} */
    NgxIonicImageViewerComponent.prototype.title;
    /** @type {?} */
    NgxIonicImageViewerComponent.prototype.text;
    /** @type {?} */
    NgxIonicImageViewerComponent.prototype.modalController;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var NgxIonicImageViewerModule = /** @class */ (function () {
    function NgxIonicImageViewerModule() {
    }
    NgxIonicImageViewerModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [NgxIonicImageViewerComponent, ViewerModalComponent],
                    imports: [CommonModule, IonicModule],
                    entryComponents: [ViewerModalComponent],
                    exports: [NgxIonicImageViewerComponent, ViewerModalComponent]
                },] }
    ];
    return NgxIonicImageViewerModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { NgxIonicImageViewerComponent, NgxIonicImageViewerModule, NgxIonicImageViewerService, ViewerModalComponent as ɵa };
//# sourceMappingURL=ngx-ionic-image-viewer.js.map
